{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:51",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:16",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "60a67b0f5bf99d337b977f8fdc227400624a4aa4185d0ab504171ded2cf80f6a",
          "withoutMetadata": "60a67b0f5bf99d337b977f8fdc227400624a4aa4185d0ab504171ded2cf80f6a",
          "linkedWithoutMetadata": "60a67b0f5bf99d337b977f8fdc227400624a4aa4185d0ab504171ded2cf80f6a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:IERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "51",
              "type": "t_struct(RoyaltyInfo)2120_storage",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2120_storage)",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)48_storage",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:119"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2120_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2120_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d54531611aa8ed4fb7fd314a18366ecff6c08afa9e26a6a980af554521043d6c",
          "withoutMetadata": "d54531611aa8ed4fb7fd314a18366ecff6c08afa9e26a6a980af554521043d6c",
          "linkedWithoutMetadata": "d54531611aa8ed4fb7fd314a18366ecff6c08afa9e26a6a980af554521043d6c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:MulticallUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MulticallUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:34",
        "version": {
          "withMetadata": "47c2c9f9047821d0184b2de02cfca1b60acbb6fcb18ed87b793dbb5558860a82",
          "withoutMetadata": "47c2c9f9047821d0184b2de02cfca1b60acbb6fcb18ed87b793dbb5558860a82",
          "linkedWithoutMetadata": "47c2c9f9047821d0184b2de02cfca1b60acbb6fcb18ed87b793dbb5558860a82"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:12",
        "version": {
          "withMetadata": "86739fe212f58c19f4a8309631f496cdc1aafb465dc63117b31e9fbe141712e3",
          "withoutMetadata": "86739fe212f58c19f4a8309631f496cdc1aafb465dc63117b31e9fbe141712e3",
          "linkedWithoutMetadata": "86739fe212f58c19f4a8309631f496cdc1aafb465dc63117b31e9fbe141712e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "f58b6bb5bdc27b84d8e77e3a57a1083517852d5a7d962817169c0ff5196c81fe",
          "withoutMetadata": "f58b6bb5bdc27b84d8e77e3a57a1083517852d5a7d962817169c0ff5196c81fe",
          "linkedWithoutMetadata": "f58b6bb5bdc27b84d8e77e3a57a1083517852d5a7d962817169c0ff5196c81fe"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "d7b3112336c0a55b0072d61035be32e11396a9ba0ac3f3fe55fde0931eedb0c9",
          "withoutMetadata": "d7b3112336c0a55b0072d61035be32e11396a9ba0ac3f3fe55fde0931eedb0c9",
          "linkedWithoutMetadata": "d7b3112336c0a55b0072d61035be32e11396a9ba0ac3f3fe55fde0931eedb0c9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:9",
        "version": {
          "withMetadata": "c67db880475f4afb8e546a3ae27169ef055ed0005dcb9187d729a6e2c7b6d823",
          "withoutMetadata": "c67db880475f4afb8e546a3ae27169ef055ed0005dcb9187d729a6e2c7b6d823",
          "linkedWithoutMetadata": "c67db880475f4afb8e546a3ae27169ef055ed0005dcb9187d729a6e2c7b6d823"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)4508_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)4508_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)4508_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "32467be4c755f163c124f16dd661889332804814b2011aa6dfd4dbe913de54cd",
          "withoutMetadata": "32467be4c755f163c124f16dd661889332804814b2011aa6dfd4dbe913de54cd",
          "linkedWithoutMetadata": "32467be4c755f163c124f16dd661889332804814b2011aa6dfd4dbe913de54cd"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "7ba23940d960eb49698911ec4fc4c89f0b9769efabfa1c37b0d221291952e9ff",
          "withoutMetadata": "7ba23940d960eb49698911ec4fc4c89f0b9769efabfa1c37b0d221291952e9ff",
          "linkedWithoutMetadata": "7ba23940d960eb49698911ec4fc4c89f0b9769efabfa1c37b0d221291952e9ff"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "12b5542633bf009a1c1f5dcb845141bca657515135acb6d4c8b00ebc32d98e03",
          "withoutMetadata": "12b5542633bf009a1c1f5dcb845141bca657515135acb6d4c8b00ebc32d98e03",
          "linkedWithoutMetadata": "12b5542633bf009a1c1f5dcb845141bca657515135acb6d4c8b00ebc32d98e03"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "957a2e656b6df8634df6ba91e61d607cbf4155f5bc119829792e607f6732895c",
          "withoutMetadata": "957a2e656b6df8634df6ba91e61d607cbf4155f5bc119829792e607f6732895c",
          "linkedWithoutMetadata": "957a2e656b6df8634df6ba91e61d607cbf4155f5bc119829792e607f6732895c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:29",
        "version": {
          "withMetadata": "ce67f7e4eb7d0d72b4507afc94f6d04e657e7ea3137550d929aa3d86b0536fb6",
          "withoutMetadata": "ce67f7e4eb7d0d72b4507afc94f6d04e657e7ea3137550d929aa3d86b0536fb6",
          "linkedWithoutMetadata": "ce67f7e4eb7d0d72b4507afc94f6d04e657e7ea3137550d929aa3d86b0536fb6"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:34"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "90e6933e87952c89aca6c083672096ac30fadaaa3e7d2cacfb61411295837b51",
          "withoutMetadata": "90e6933e87952c89aca6c083672096ac30fadaaa3e7d2cacfb61411295837b51",
          "linkedWithoutMetadata": "90e6933e87952c89aca6c083672096ac30fadaaa3e7d2cacfb61411295837b51"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "fc887492e94e5750ac688a0d55a2ea1cff1b442aa384450063700d3f1af69a80",
          "withoutMetadata": "fc887492e94e5750ac688a0d55a2ea1cff1b442aa384450063700d3f1af69a80",
          "linkedWithoutMetadata": "fc887492e94e5750ac688a0d55a2ea1cff1b442aa384450063700d3f1af69a80"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "d1f3bf29706d290912d6f10221c99d797bc3962825f9d62c772d94001df79944",
          "withoutMetadata": "d1f3bf29706d290912d6f10221c99d797bc3962825f9d62c772d94001df79944",
          "linkedWithoutMetadata": "d1f3bf29706d290912d6f10221c99d797bc3962825f9d62c772d94001df79944"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "0c9e60d59e2063efe2a78c1d10e8eacdf60b97b6908f859d7c982381f8fa257d",
          "withoutMetadata": "0c9e60d59e2063efe2a78c1d10e8eacdf60b97b6908f859d7c982381f8fa257d",
          "linkedWithoutMetadata": "0c9e60d59e2063efe2a78c1d10e8eacdf60b97b6908f859d7c982381f8fa257d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "b24fba8fa1f07a27187c86d6dfcd0f4f863aa2a5ddfbdb17440b2e1dfd4bf52f",
          "withoutMetadata": "b24fba8fa1f07a27187c86d6dfcd0f4f863aa2a5ddfbdb17440b2e1dfd4bf52f",
          "linkedWithoutMetadata": "b24fba8fa1f07a27187c86d6dfcd0f4f863aa2a5ddfbdb17440b2e1dfd4bf52f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/Bridge.sol:Bridge": {
        "src": "contracts/crosschain/Bridge.sol:13",
        "version": {
          "withMetadata": "db665b1f8db619dc513e887d2e61ee560abaee12f870e45d0105a50d9fff6808",
          "withoutMetadata": "db665b1f8db619dc513e887d2e61ee560abaee12f870e45d0105a50d9fff6808",
          "linkedWithoutMetadata": "db665b1f8db619dc513e887d2e61ee560abaee12f870e45d0105a50d9fff6808"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/IBridge.sol:IBridge",
          "contracts/crosschain/interfaces/IReceiver.sol:IReceiver"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint8,address,address)",
          "pause()",
          "unpause()",
          "receive_(bytes)",
          "getRef(uint256,uint8,uint8,bytes32,bytes32,address,uint64)",
          "estimateFee(uint8,uint8,bytes32,bytes32)",
          "bridge(uint256,bytes32,uint8,uint8,bytes32,bytes32)",
          "accept(uint256,bytes32,uint8,uint8,bytes,bytes,address,uint64)",
          "getAcceptedRequest(bytes32)",
          "getBridgedRequest(bytes32)",
          "getRemoteBridge(uint8)",
          "setRemoteBridge(uint8,address)",
          "getNonce()",
          "isReceived(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "151",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "302",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "_selfChain",
              "offset": 0,
              "slot": "351",
              "type": "t_enum(Chain)13793",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:18"
            },
            {
              "label": "_registry",
              "offset": 1,
              "slot": "351",
              "type": "t_contract(IRegistry)19787",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:20"
            },
            {
              "label": "_portal",
              "offset": 0,
              "slot": "352",
              "type": "t_contract(IPortal)10152",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:21"
            },
            {
              "label": "_acceptedRequests",
              "offset": 0,
              "slot": "353",
              "type": "t_mapping(t_bytes32,t_struct(AcceptedRequest)9933_storage)",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:23"
            },
            {
              "label": "_bridgedRequests",
              "offset": 0,
              "slot": "354",
              "type": "t_mapping(t_bytes32,t_struct(BridgedRequest)9948_storage)",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:24"
            },
            {
              "label": "_receivedRequest",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:25"
            },
            {
              "label": "_remoteBridges",
              "offset": 0,
              "slot": "356",
              "type": "t_mapping(t_enum(Chain)13793,t_address)",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:27"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "357",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "358",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:204"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IPortal)10152": {
              "label": "contract IPortal",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(Chain)13793": {
              "label": "enum Chain",
              "members": [
                "ETHEREUM",
                "BNB",
                "POLYGON",
                "AVALANCHE",
                "FANTOM",
                "OPTIMISM",
                "ARBITRUM",
                "IOTEX",
                "OKC",
                "GNOSIS",
                "CELO",
                "HARMONY",
                "MOONBEAM",
                "MOONRIVER",
                "ZKSYNC",
                "POLYGON_ZKEVM"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(CrossChainProvider)13800": {
              "label": "enum CrossChainProvider",
              "members": [
                "LAYERZERO",
                "MULTICHAIN",
                "ROUTER_PROTOCOL",
                "NOMAD"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AcceptedRequest)9933_storage)": {
              "label": "mapping(bytes32 => struct IBridge.AcceptedRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(BridgedRequest)9948_storage)": {
              "label": "mapping(bytes32 => struct IBridge.BridgedRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Chain)13793,t_address)": {
              "label": "mapping(enum Chain => address)",
              "numberOfBytes": "32"
            },
            "t_struct(AcceptedRequest)9933_storage": {
              "label": "struct IBridge.AcceptedRequest",
              "members": [
                {
                  "label": "srcChain",
                  "type": "t_enum(Chain)13793",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "provider",
                  "type": "t_enum(CrossChainProvider)13800",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "tld",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "name",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "expiry",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(BridgedRequest)9948_storage": {
              "label": "struct IBridge.BridgedRequest",
              "members": [
                {
                  "label": "dstChain",
                  "type": "t_enum(Chain)13793",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "provider",
                  "type": "t_enum(CrossChainProvider)13800",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "tld",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "name",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "expiry",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/Portal.sol:Portal": {
        "src": "contracts/crosschain/Portal.sol:11",
        "version": {
          "withMetadata": "b1f0d2fabe6f2b9d4cb7a08b45a3221b39863f285e02a868a08a3b2b5fc487b6",
          "withoutMetadata": "b1f0d2fabe6f2b9d4cb7a08b45a3221b39863f285e02a868a08a3b2b5fc487b6",
          "linkedWithoutMetadata": "b1f0d2fabe6f2b9d4cb7a08b45a3221b39863f285e02a868a08a3b2b5fc487b6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/IPortal.sol:IPortal"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "send_(address payable,uint8,uint8,bytes)",
          "receive_(uint8,bytes)",
          "estimateFee(uint8,uint8,bytes)",
          "getProvider(uint8)",
          "setProvider(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_providers",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_enum(CrossChainProvider)13800,t_address)",
              "contract": "Portal",
              "src": "contracts/crosschain/Portal.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Portal",
              "src": "contracts/crosschain/Portal.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(CrossChainProvider)13800": {
              "label": "enum CrossChainProvider",
              "members": [
                "LAYERZERO",
                "MULTICHAIN",
                "ROUTER_PROTOCOL",
                "NOMAD"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(CrossChainProvider)13800,t_address)": {
              "label": "mapping(enum CrossChainProvider => address)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/Synchronizer.sol:Synchronizer": {
        "src": "contracts/crosschain/Synchronizer.sol:15",
        "version": {
          "withMetadata": "55b065f9a5c4deaa386a8923f0ad0aabaf9379ab39d31bee0f6ee10fc14cfef6",
          "withoutMetadata": "55b065f9a5c4deaa386a8923f0ad0aabaf9379ab39d31bee0f6ee10fc14cfef6",
          "linkedWithoutMetadata": "55b065f9a5c4deaa386a8923f0ad0aabaf9379ab39d31bee0f6ee10fc14cfef6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/IReceiver.sol:IReceiver",
          "contracts/crosschain/interfaces/ISynchronizer.sol:ISynchronizer"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint8,address,address)",
          "pause()",
          "unpause()",
          "estimateSyncFee(uint8,uint8,enum Chain[],bytes)",
          "sync(address payable,uint8,uint8,enum Chain[],bytes)",
          "receive_(bytes)",
          "getRemoteSynchronizer(uint8)",
          "setRemoteSynchronizer(uint8,address)",
          "getUserDefaultProvider(address)",
          "setUserDefaultProvider(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_selfChain",
              "offset": 0,
              "slot": "301",
              "type": "t_enum(Chain)13793",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:20"
            },
            {
              "label": "_registrar",
              "offset": 1,
              "slot": "301",
              "type": "t_contract(IRegistrar)16090",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:22"
            },
            {
              "label": "_portal",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(IPortal)10152",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:23"
            },
            {
              "label": "_resolver",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IPublicResolver)20804",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:24"
            },
            {
              "label": "_remoteSynchronizers",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_enum(Chain)13793,t_address)",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:26"
            },
            {
              "label": "_userDefaultProviders",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_address,t_enum(CrossChainProvider)13800)",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:27"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "306",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:164"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IPortal)10152": {
              "label": "contract IPortal",
              "numberOfBytes": "20"
            },
            "t_contract(IPublicResolver)20804": {
              "label": "contract IPublicResolver",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(Chain)13793": {
              "label": "enum Chain",
              "members": [
                "ETHEREUM",
                "BNB",
                "POLYGON",
                "AVALANCHE",
                "FANTOM",
                "OPTIMISM",
                "ARBITRUM",
                "IOTEX",
                "OKC",
                "GNOSIS",
                "CELO",
                "HARMONY",
                "MOONBEAM",
                "MOONRIVER",
                "ZKSYNC",
                "POLYGON_ZKEVM"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(CrossChainProvider)13800": {
              "label": "enum CrossChainProvider",
              "members": [
                "LAYERZERO",
                "MULTICHAIN",
                "ROUTER_PROTOCOL",
                "NOMAD"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(CrossChainProvider)13800)": {
              "label": "mapping(address => enum CrossChainProvider)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Chain)13793,t_address)": {
              "label": "mapping(enum Chain => address)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication": {
        "src": "contracts/crosschain/SynchronizerApplication.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication"
        ],
        "libraries": [],
        "methods": [
          "receiveSync(bytes)",
          "getSynchronizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/interfaces/IBridge.sol:IBridge": {
        "src": "contracts/crosschain/interfaces/IBridge.sol:9",
        "inherit": [
          "contracts/crosschain/interfaces/IReceiver.sol:IReceiver"
        ],
        "libraries": [],
        "methods": [
          "estimateFee(uint8,uint8,bytes32,bytes32)",
          "bridge(uint256,bytes32,uint8,uint8,bytes32,bytes32)",
          "accept(uint256,bytes32,uint8,uint8,bytes,bytes,address,uint64)",
          "getAcceptedRequest(bytes32)",
          "getBridgedRequest(bytes32)",
          "getRemoteBridge(uint8)",
          "setRemoteBridge(uint8,address)",
          "getNonce()",
          "getRef(uint256,uint8,uint8,bytes32,bytes32,address,uint64)",
          "isReceived(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/interfaces/IPortal.sol:IPortal": {
        "src": "contracts/crosschain/interfaces/IPortal.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "send_(address payable,uint8,uint8,bytes)",
          "receive_(uint8,bytes)",
          "estimateFee(uint8,uint8,bytes)",
          "getProvider(uint8)",
          "setProvider(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/interfaces/IReceiver.sol:IReceiver": {
        "src": "contracts/crosschain/interfaces/IReceiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receive_(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/interfaces/ISynchronizer.sol:ISynchronizer": {
        "src": "contracts/crosschain/interfaces/ISynchronizer.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "estimateSyncFee(uint8,uint8,enum Chain[],bytes)",
          "sync(address payable,uint8,uint8,enum Chain[],bytes)",
          "getRemoteSynchronizer(uint8)",
          "setRemoteSynchronizer(uint8,address)",
          "getUserDefaultProvider(address)",
          "setUserDefaultProvider(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication": {
        "src": "contracts/crosschain/interfaces/ISynchronizerApplication.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveSync(bytes)",
          "getSynchronizer()",
          "setSynchronizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/interfaces/IBaseProvider.sol:IBaseProvider": {
        "src": "contracts/crosschain/providers/interfaces/IBaseProvider.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "send_(address payable,uint8,bytes)",
          "receive_(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:LayerZeroEndpointMock": {
        "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:16",
        "version": {
          "withMetadata": "d90381dfa3c224f476c7f39871af3f69bce980c304dab84832f33b5d5863461e",
          "withoutMetadata": "d90381dfa3c224f476c7f39871af3f69bce980c304dab84832f33b5d5863461e",
          "linkedWithoutMetadata": "d90381dfa3c224f476c7f39871af3f69bce980c304dab84832f33b5d5863461e"
        },
        "inherit": [
          "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroEndpoint.sol:ILayerZeroEndpoint",
          "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig"
        ],
        "libraries": [],
        "methods": [
          "(uint16)",
          "setEstimatedFees(uint256,uint256)",
          "getChainId()",
          "setDestLzEndpoint(address,address)",
          "send(uint16,bytes,bytes,address payable,address,bytes)",
          "receivePayload(uint16,bytes,address,uint64,uint256,bytes)",
          "blockNextMsg()",
          "getLengthOfQueue(uint16,bytes)",
          "estimateFees(uint16,address,bytes,bool,bytes)",
          "packedBytesToAddr(bytes)",
          "addrToPackedBytes(address)",
          "setConfig(uint16,uint16,uint256,bytes)",
          "getConfig(uint16,uint16,address,uint256)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "getSendVersion(address)",
          "getReceiveVersion(address)",
          "getInboundNonce(uint16,bytes)",
          "getOutboundNonce(uint16,address)",
          "forceResumeReceive(uint16,bytes)",
          "retryPayload(uint16,bytes,bytes)",
          "hasStoredPayload(uint16,bytes)",
          "isSendingPayload()",
          "isReceivingPayload()",
          "getSendLibraryAddress(address)",
          "getReceiveLibraryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LayerZeroEndpointMock",
            "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lzEndpointLookup",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:17"
            },
            {
              "label": "mockChainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint16",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:19"
            },
            {
              "label": "mockOracle",
              "offset": 2,
              "slot": "1",
              "type": "t_address_payable",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:20"
            },
            {
              "label": "mockRelayer",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:21"
            },
            {
              "label": "mockBlockConfirmations",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:22"
            },
            {
              "label": "mockLibraryVersion",
              "offset": 0,
              "slot": "4",
              "type": "t_uint16",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:23"
            },
            {
              "label": "mockStaticNativeFee",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:24"
            },
            {
              "label": "mockLayerZeroVersion",
              "offset": 0,
              "slot": "6",
              "type": "t_uint16",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:25"
            },
            {
              "label": "nativeFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:26"
            },
            {
              "label": "zroFee",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:27"
            },
            {
              "label": "nextMsgBLocked",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:28"
            },
            {
              "label": "inboundNonce",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:43"
            },
            {
              "label": "outboundNonce",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint64))",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:45"
            },
            {
              "label": "storedPayload",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)10372_storage))",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:47"
            },
            {
              "label": "msgsToDeliver",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)10379_storage)dyn_storage))",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(QueuedPayload)10379_storage)dyn_storage": {
              "label": "struct LayerZeroEndpointMock.QueuedPayload[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint64)": {
              "label": "mapping(address => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)10379_storage)dyn_storage)": {
              "label": "mapping(bytes => struct LayerZeroEndpointMock.QueuedPayload[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)10372_storage)": {
              "label": "mapping(bytes => struct LayerZeroEndpointMock.StoredPayload)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_uint64)": {
              "label": "mapping(bytes => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_address,t_uint64))": {
              "label": "mapping(uint16 => mapping(address => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)10379_storage)dyn_storage))": {
              "label": "mapping(uint16 => mapping(bytes => struct LayerZeroEndpointMock.QueuedPayload[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)10372_storage))": {
              "label": "mapping(uint16 => mapping(bytes => struct LayerZeroEndpointMock.StoredPayload))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))": {
              "label": "mapping(uint16 => mapping(bytes => uint64))",
              "numberOfBytes": "32"
            },
            "t_struct(QueuedPayload)10379_storage": {
              "label": "struct LayerZeroEndpointMock.QueuedPayload",
              "members": [
                {
                  "label": "dstAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nonce",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "payload",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(StoredPayload)10372_storage": {
              "label": "struct LayerZeroEndpointMock.StoredPayload",
              "members": [
                {
                  "label": "payloadLength",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dstAddress",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "payloadHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:LayerZeroProvider": {
        "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:10",
        "version": {
          "withMetadata": "ae40d47e8e0057dab4bb085acd4bf13d7297593631668b17746684a825267bc7",
          "withoutMetadata": "ae40d47e8e0057dab4bb085acd4bf13d7297593631668b17746684a825267bc7",
          "linkedWithoutMetadata": "ae40d47e8e0057dab4bb085acd4bf13d7297593631668b17746684a825267bc7"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroProvider.sol:ILayerZeroProvider"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "estimateFee(uint8,bytes)",
          "send_(address payable,uint8,bytes)",
          "lzReceive(uint16,bytes,uint64,bytes)",
          "receive_(bytes)",
          "getChainId(uint8)",
          "setChainId(uint8,uint16)",
          "setTrustedRemote(uint16,bytes)",
          "isTrustedRemote(uint16,bytes)",
          "setV1AdaptorParameters(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_portal",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(IPortal)10152",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:14"
            },
            {
              "label": "_lzEndpoint",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(ILayerZeroEndpoint)11737",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:15"
            },
            {
              "label": "_chainIds",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_enum(Chain)13793,t_uint16)",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:17"
            },
            {
              "label": "trustedRemotes",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:18"
            },
            {
              "label": "v1AdaptorParameters",
              "offset": 0,
              "slot": "255",
              "type": "t_bytes_storage",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)50_storage",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:119"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ILayerZeroEndpoint)11737": {
              "label": "contract ILayerZeroEndpoint",
              "numberOfBytes": "20"
            },
            "t_contract(IPortal)10152": {
              "label": "contract IPortal",
              "numberOfBytes": "20"
            },
            "t_enum(Chain)13793": {
              "label": "enum Chain",
              "members": [
                "ETHEREUM",
                "BNB",
                "POLYGON",
                "AVALANCHE",
                "FANTOM",
                "OPTIMISM",
                "ARBITRUM",
                "IOTEX",
                "OKC",
                "GNOSIS",
                "CELO",
                "HARMONY",
                "MOONBEAM",
                "MOONRIVER",
                "ZKSYNC",
                "POLYGON_ZKEVM"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Chain)13793,t_uint16)": {
              "label": "mapping(enum Chain => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroEndpoint.sol:ILayerZeroEndpoint": {
        "src": "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroEndpoint.sol:7",
        "inherit": [
          "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig"
        ],
        "libraries": [],
        "methods": [
          "send(uint16,bytes,bytes,address payable,address,bytes)",
          "receivePayload(uint16,bytes,address,uint64,uint256,bytes)",
          "getInboundNonce(uint16,bytes)",
          "getOutboundNonce(uint16,address)",
          "estimateFees(uint16,address,bytes,bool,bytes)",
          "getChainId()",
          "retryPayload(uint16,bytes,bytes)",
          "hasStoredPayload(uint16,bytes)",
          "getSendLibraryAddress(address)",
          "getReceiveLibraryAddress(address)",
          "isSendingPayload()",
          "isReceivingPayload()",
          "getConfig(uint16,uint16,address,uint256)",
          "getSendVersion(address)",
          "getReceiveVersion(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroProvider.sol:ILayerZeroProvider": {
        "src": "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroProvider.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "estimateFee(uint8,bytes)",
          "send_(address payable,uint8,bytes)",
          "getChainId(uint8)",
          "setChainId(uint8,uint16)",
          "setTrustedRemote(uint16,bytes)",
          "isTrustedRemote(uint16,bytes)",
          "setV1AdaptorParameters(uint256)",
          "lzReceive(uint16,bytes,uint64,bytes)",
          "receive_(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroReceiver.sol:ILayerZeroReceiver": {
        "src": "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroReceiver.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "lzReceive(uint16,bytes,uint64,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig": {
        "src": "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroUserApplicationConfig.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setConfig(uint16,uint16,uint256,bytes)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "forceResumeReceive(uint16,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/multichain/interfaces/IMultichainAnyCallV6Provider.sol:IMultichainAnyCallV6Provider": {
        "src": "contracts/crosschain/providers/multichain/interfaces/IMultichainAnyCallV6Provider.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "estimateFee(uint16,bytes)",
          "send_(address payable,uint8,bytes)",
          "getChainId(uint8)",
          "setChainId(uint8,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/router-protocol/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/crosschain/providers/router-protocol/interfaces/IHandler.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "MapContract((address,uint8,address))",
          "UnMapContract((address,uint8,address))",
          "genericDeposit(uint8,bytes,uint256,uint256,address)",
          "fetch_chainID()",
          "replayGenericDeposit(uint8,uint64,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/router-protocol/interfaces/IRouterProtocolV1Provider.sol:IRouterProtocolV1Provider": {
        "src": "contracts/crosschain/providers/router-protocol/interfaces/IRouterProtocolV1Provider.sol:6",
        "inherit": [
          "contracts/crosschain/providers/interfaces/IBaseProvider.sol:IBaseProvider"
        ],
        "libraries": [],
        "methods": [
          "setFeeToken(address)",
          "getFeeToken(address)",
          "setHandler(address)",
          "getHandler()",
          "routerReply(uint8,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/Diamond.sol:Diamond": {
        "src": "contracts/diamond/Diamond.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Diamond",
            "src": "contracts/diamond/Diamond.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:198"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/access/AccessControl.sol:AccessControl": {
        "src": "contracts/diamond/access/AccessControl.sol:12",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/facets/DiamondCutFacet.sol:DiamondCutFacet": {
        "src": "contracts/diamond/facets/DiamondCutFacet.sol:15",
        "version": {
          "withMetadata": "d6ae5fe5d775551a782c8f6cc0dc4340292c5cb85aa7730f318d166def9d7350",
          "withoutMetadata": "d6ae5fe5d775551a782c8f6cc0dc4340292c5cb85aa7730f318d166def9d7350",
          "linkedWithoutMetadata": "d6ae5fe5d775551a782c8f6cc0dc4340292c5cb85aa7730f318d166def9d7350"
        },
        "inherit": [
          "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut"
        ],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamondCut.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:198"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/facets/DiamondLoupeFacet.sol:DiamondLoupeFacet": {
        "src": "contracts/diamond/facets/DiamondLoupeFacet.sol:15",
        "version": {
          "withMetadata": "7726325a25ac557d4cefc364579228becd1b36aa6d109ef73c95001505a262f6",
          "withoutMetadata": "7726325a25ac557d4cefc364579228becd1b36aa6d109ef73c95001505a262f6",
          "linkedWithoutMetadata": "7726325a25ac557d4cefc364579228becd1b36aa6d109ef73c95001505a262f6"
        },
        "inherit": [
          "contracts/diamond/interfaces/IERC165.sol:IERC165",
          "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe"
        ],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut": {
        "src": "contracts/diamond/interfaces/IDiamondCut.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamondCut.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe": {
        "src": "contracts/diamond/interfaces/IDiamondLoupe.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IERC165.sol:IERC165": {
        "src": "contracts/diamond/interfaces/IERC165.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IERC173.sol:IERC173": {
        "src": "contracts/diamond/interfaces/IERC173.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/libraries/LibDiamond.sol:LibDiamond": {
        "src": "contracts/diamond/libraries/LibDiamond.sol:15",
        "version": {
          "withMetadata": "3a7fe2f9bc8f14e6dac2b794c483f21eb8ff8a0c47c918e12b6da2d27b7db658",
          "withoutMetadata": "3a7fe2f9bc8f14e6dac2b794c483f21eb8ff8a0c47c918e12b6da2d27b7db658",
          "linkedWithoutMetadata": "3a7fe2f9bc8f14e6dac2b794c483f21eb8ff8a0c47c918e12b6da2d27b7db658"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:198"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:198"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet": {
        "src": "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:7",
        "version": {
          "withMetadata": "823c13a3ab4bbca641c8c58af44476f5f6ec60db3d5287bb449042bd8041eb77",
          "withoutMetadata": "823c13a3ab4bbca641c8c58af44476f5f6ec60db3d5287bb449042bd8041eb77",
          "linkedWithoutMetadata": "823c13a3ab4bbca641c8c58af44476f5f6ec60db3d5287bb449042bd8041eb77"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/upgradeInitializers/DiamondInit.sol:DiamondInit": {
        "src": "contracts/diamond/upgradeInitializers/DiamondInit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/migration/MigrationController.sol:MigrationController": {
        "src": "contracts/migration/MigrationController.sol:7",
        "version": {
          "withMetadata": "feb001bedab33ed4750e212b36776f7723e9347ac10f12b9b2d25ca9cefaf906",
          "withoutMetadata": "feb001bedab33ed4750e212b36776f7723e9347ac10f12b9b2d25ca9cefaf906",
          "linkedWithoutMetadata": "feb001bedab33ed4750e212b36776f7723e9347ac10f12b9b2d25ca9cefaf906"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "migrate(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_baseRegistrar",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(IRegistrar)16090",
              "contract": "MigrationController",
              "src": "contracts/migration/MigrationController.sol:8"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/migration/interfaces/ILegacyBaseRegistrar.sol:ILegacyBaseRegistrar": {
        "src": "contracts/migration/interfaces/ILegacyBaseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "nameExpiry(uint256)",
          "deregister(uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/mock/TokenMock.sol:TokenMock": {
        "src": "contracts/mock/TokenMock.sol:9",
        "version": {
          "withMetadata": "0d75522db7f19f1cc5e4a2350099b07ef9da8ba15a7be73ee615ef2a91194d60",
          "withoutMetadata": "0d75522db7f19f1cc5e4a2350099b07ef9da8ba15a7be73ee615ef2a91194d60",
          "linkedWithoutMetadata": "0d75522db7f19f1cc5e4a2350099b07ef9da8ba15a7be73ee615ef2a91194d60"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "pause()",
          "unpause()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenMock",
            "src": "contracts/mock/TokenMock.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)4508_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)4508_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)4508_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/BaseRegistrarController.sol:BaseRegistrarController": {
        "src": "contracts/registrar/BaseRegistrarController.sol:16",
        "inherit": [
          "contracts/utils/Helper.sol:Helper",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "301",
              "type": "t_contract(IERC20Upgradeable)1518",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:20"
            },
            {
              "label": "_registrar",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(IRegistrar)16090",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:21"
            },
            {
              "label": "_root",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IRoot)23271",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:22"
            },
            {
              "label": "COIN_ID",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1518": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRoot)23271": {
              "label": "contract IRoot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/BatchRegistrarController.sol:BatchRegistrarController": {
        "src": "contracts/registrar/BatchRegistrarController.sol:7",
        "version": {
          "withMetadata": "9c4de035790f4509e08c1e46241a243a64dcd9cb39363aaae7c0b6830b61c0ed",
          "withoutMetadata": "9c4de035790f4509e08c1e46241a243a64dcd9cb39363aaae7c0b6830b61c0ed",
          "linkedWithoutMetadata": "9c4de035790f4509e08c1e46241a243a64dcd9cb39363aaae7c0b6830b61c0ed"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "register(address,bytes[],bytes[],address,uint64[])",
          "register(address,bytes[],bytes[],address[],uint64[],uint256[],bytes[])",
          "renew(address,bytes[],bytes[],uint64[])",
          "renew(address,bytes[],bytes[],uint64[],uint256[],bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/ClassicalRegistrarController.sol:ClassicalRegistrarController": {
        "src": "contracts/registrar/ClassicalRegistrarController.sol:7",
        "version": {
          "withMetadata": "3e4a16a9b60b583426d21d0f260f1d5f6d1a39169b3c2a65888b9d96d936a492",
          "withoutMetadata": "3e4a16a9b60b583426d21d0f260f1d5f6d1a39169b3c2a65888b9d96d936a492",
          "linkedWithoutMetadata": "3e4a16a9b60b583426d21d0f260f1d5f6d1a39169b3c2a65888b9d96d936a492"
        },
        "inherit": [
          "contracts/registrar/BaseRegistrarController.sol:BaseRegistrarController",
          "contracts/utils/Helper.sol:Helper",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/registrar/interfaces/IClassicalRegistrarController.sol:IClassicalRegistrarController",
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256)",
          "isAvailable(bytes)",
          "isAvailable(bytes,bytes)",
          "register(bytes,bytes,address,uint64)",
          "register(bytes,bytes,address,uint64,uint256,bytes)",
          "renew(bytes,bytes,uint64)",
          "renew(bytes,bytes,uint64,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "301",
              "type": "t_contract(IERC20Upgradeable)1518",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:20"
            },
            {
              "label": "_registrar",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(IRegistrar)16090",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:21"
            },
            {
              "label": "_root",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IRoot)23271",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:22"
            },
            {
              "label": "COIN_ID",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:71"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ClassicalRegistrarController",
              "src": "contracts/registrar/ClassicalRegistrarController.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1518": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRoot)23271": {
              "label": "contract IRoot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/OmniRegistrarController.sol:OmniRegistrarController": {
        "src": "contracts/registrar/OmniRegistrarController.sol:9",
        "version": {
          "withMetadata": "7c5a12b73cadb6173177f986367bece90f17c3ea9816dbc8a6a2da7a1694fa41",
          "withoutMetadata": "7c5a12b73cadb6173177f986367bece90f17c3ea9816dbc8a6a2da7a1694fa41",
          "linkedWithoutMetadata": "7c5a12b73cadb6173177f986367bece90f17c3ea9816dbc8a6a2da7a1694fa41"
        },
        "inherit": [
          "contracts/registrar/BaseRegistrarController.sol:BaseRegistrarController",
          "contracts/utils/Helper.sol:Helper",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/registrar/interfaces/IOmniRegistrarController.sol:IOmniRegistrarController",
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256)",
          "isAvailable(bytes)",
          "isAvailable(bytes,bytes)",
          "register(bytes,bytes,address,uint64)",
          "register(bytes,bytes,address,uint64,uint256,bytes)",
          "renew(bytes,bytes,uint64)",
          "renew(bytes,bytes,uint64,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "301",
              "type": "t_contract(IERC20Upgradeable)1518",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:20"
            },
            {
              "label": "_registrar",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(IRegistrar)16090",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:21"
            },
            {
              "label": "_root",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IRoot)23271",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:22"
            },
            {
              "label": "COIN_ID",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:71"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OmniRegistrarController",
              "src": "contracts/registrar/OmniRegistrarController.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1518": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRoot)23271": {
              "label": "contract IRoot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/Registrar.sol:Registrar": {
        "src": "contracts/registrar/Registrar.sol:15",
        "version": {
          "withMetadata": "b658e2fc93ad197355ad4827033344a136271be7fdffe58b655a2708c4c84070",
          "withoutMetadata": "b658e2fc93ad197355ad4827033344a136271be7fdffe58b655a2708c4c84070",
          "linkedWithoutMetadata": "b658e2fc93ad197355ad4827033344a136271be7fdffe58b655a2708c4c84070"
        },
        "inherit": [
          "contracts/utils/Helper.sol:Helper",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/registrar/interfaces/IRegistrar.sol:IRegistrar"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "getExpiry(bytes,bytes)",
          "isAvailable(bytes)",
          "isAvailable(bytes,bytes)",
          "isExists(bytes,bytes)",
          "isExists(bytes32)",
          "isControllerApproved(bytes32,address)",
          "setControllerApproval(bytes32,address,bool)",
          "register(address,bytes,bytes,address,uint64)",
          "renew(address,bytes,bytes,uint64)",
          "setSynchronizer(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "252",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "contract": "Registrar",
              "src": "contracts/registrar/Registrar.sol:21"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(IRegistry)19787",
              "contract": "Registrar",
              "src": "contracts/registrar/Registrar.sol:23"
            },
            {
              "label": "_resolver",
              "offset": 0,
              "slot": "254",
              "type": "t_contract(IPublicResolver)20804",
              "contract": "Registrar",
              "src": "contracts/registrar/Registrar.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "255",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Registrar",
              "src": "contracts/registrar/Registrar.sol:144"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IPublicResolver)20804": {
              "label": "contract IPublicResolver",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/UniversalRegistrarController.sol:UniversalRegistrarController": {
        "src": "contracts/registrar/UniversalRegistrarController.sol:9",
        "version": {
          "withMetadata": "eaf8b5639cc965650284b1b13306b2a0b6f28c89792925d68491793608f13ef3",
          "withoutMetadata": "eaf8b5639cc965650284b1b13306b2a0b6f28c89792925d68491793608f13ef3",
          "linkedWithoutMetadata": "eaf8b5639cc965650284b1b13306b2a0b6f28c89792925d68491793608f13ef3"
        },
        "inherit": [
          "contracts/registrar/BaseRegistrarController.sol:BaseRegistrarController",
          "contracts/utils/Helper.sol:Helper",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/registrar/interfaces/IUniversalRegistrarController.sol:IUniversalRegistrarController",
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256)",
          "isAvailable(bytes)",
          "isAvailable(bytes,bytes)",
          "register(bytes,bytes,address,uint64)",
          "register(bytes,bytes,address,uint64,uint256,bytes)",
          "renew(bytes,bytes,uint64)",
          "renew(bytes,bytes,uint64,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "301",
              "type": "t_contract(IERC20Upgradeable)1518",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:20"
            },
            {
              "label": "_registrar",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(IRegistrar)16090",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:21"
            },
            {
              "label": "_root",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IRoot)23271",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:22"
            },
            {
              "label": "COIN_ID",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:71"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UniversalRegistrarController",
              "src": "contracts/registrar/UniversalRegistrarController.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1518": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRoot)23271": {
              "label": "contract IRoot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController": {
        "src": "contracts/registrar/interfaces/IBaseRegistrarController.sol:5",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable"
        ],
        "libraries": [],
        "methods": [
          "register(bytes,bytes,address,uint64)",
          "renew(bytes,bytes,uint64)",
          "register(bytes,bytes,address,uint64,uint256,bytes)",
          "renew(bytes,bytes,uint64,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/interfaces/IClassicalRegistrarController.sol:IClassicalRegistrarController": {
        "src": "contracts/registrar/interfaces/IClassicalRegistrarController.sol:6",
        "inherit": [
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/interfaces/IOmniRegistrarController.sol:IOmniRegistrarController": {
        "src": "contracts/registrar/interfaces/IOmniRegistrarController.sol:6",
        "inherit": [
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/interfaces/IRegistrar.sol:IRegistrar": {
        "src": "contracts/registrar/interfaces/IRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiry(bytes,bytes)",
          "isAvailable(bytes)",
          "isAvailable(bytes,bytes)",
          "isExists(bytes,bytes)",
          "isExists(bytes32)",
          "isControllerApproved(bytes32,address)",
          "setControllerApproval(bytes32,address,bool)",
          "register(address,bytes,bytes,address,uint64)",
          "renew(address,bytes,bytes,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/interfaces/IUniversalRegistrarController.sol:IUniversalRegistrarController": {
        "src": "contracts/registrar/interfaces/IUniversalRegistrarController.sol:6",
        "inherit": [
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/Registry.sol:Registry": {
        "src": "contracts/registry/Registry.sol:5",
        "version": {
          "withMetadata": "b7d4ac37e7b8f3e9afa1d630b3ff02726b176f95639d4dee268e2f984cc3af47",
          "withoutMetadata": "b7d4ac37e7b8f3e9afa1d630b3ff02726b176f95639d4dee268e2f984cc3af47",
          "linkedWithoutMetadata": "b7d4ac37e7b8f3e9afa1d630b3ff02726b176f95639d4dee268e2f984cc3af47"
        },
        "inherit": [
          "contracts/diamond/Diamond.sol:Diamond"
        ],
        "libraries": [],
        "methods": [
          "(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Registry",
            "src": "contracts/registry/Registry.sol:6"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/AccessControlFacet.sol:AccessControlFacet": {
        "src": "contracts/registry/facets/AccessControlFacet.sol:10",
        "version": {
          "withMetadata": "7bfc2a363024858cc6b6f8eee8380009ce295d569aaf7d0ff419925fac7230c1",
          "withoutMetadata": "7bfc2a363024858cc6b6f8eee8380009ce295d569aaf7d0ff419925fac7230c1",
          "linkedWithoutMetadata": "7bfc2a363024858cc6b6f8eee8380009ce295d569aaf7d0ff419925fac7230c1"
        },
        "inherit": [
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/BaseRegistryFacet.sol:BaseRegistryFacet": {
        "src": "contracts/registry/facets/BaseRegistryFacet.sol:7",
        "version": {
          "withMetadata": "48ee31dd3ac19c0894f2680c577a517fde84fb92f56825b928441652c7e96a1b",
          "withoutMetadata": "48ee31dd3ac19c0894f2680c577a517fde84fb92f56825b928441652c7e96a1b",
          "linkedWithoutMetadata": "48ee31dd3ac19c0894f2680c577a517fde84fb92f56825b928441652c7e96a1b"
        },
        "inherit": [
          "contracts/registry/facets/Facet.sol:Facet",
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet",
          "contracts/registry/facets/interfaces/IBaseRegistryFacet.sol:IBaseRegistryFacet"
        ],
        "libraries": [],
        "methods": [
          "getTokenRecord(uint256)",
          "getGracePeriod()",
          "setDefaultWrapper(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/DomainRecordFacet.sol:DomainRecordFacet": {
        "src": "contracts/registry/facets/DomainRecordFacet.sol:12",
        "version": {
          "withMetadata": "e212f70884ae0be28d3c991343a9713e7483070117696093c3343793d2c324c8",
          "withoutMetadata": "e212f70884ae0be28d3c991343a9713e7483070117696093c3343793d2c324c8",
          "linkedWithoutMetadata": "e212f70884ae0be28d3c991343a9713e7483070117696093c3343793d2c324c8"
        },
        "inherit": [
          "contracts/registry/facets/Facet.sol:Facet",
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet",
          "contracts/registry/facets/interfaces/IDomainRecordFacet.sol:IDomainRecordFacet"
        ],
        "libraries": [],
        "methods": [
          "setRecord(bytes,bytes,address,address,uint64)",
          "setResolver(bytes32,bytes32,address)",
          "setOwner(bytes32,bytes32,address)",
          "setOperator(bytes32,bytes32,address,bool)",
          "setUser(bytes32,bytes32,address,uint64)",
          "setExpiry(bytes32,bytes32,uint64)",
          "bridge(bytes32,bytes32)",
          "getOwner(bytes32,bytes32)",
          "getResolver(bytes32,bytes32)",
          "getExpiry(bytes32,bytes32)",
          "getUser(bytes32,bytes32)",
          "getUserExpiry(bytes32,bytes32)",
          "isExists(bytes32,bytes32)",
          "isOperator(bytes32,bytes32,address)",
          "isLive(bytes32,bytes32)",
          "getTokenId(bytes,bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/Facet.sol:Facet": {
        "src": "contracts/registry/facets/Facet.sol:11",
        "inherit": [
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/HostRecordFacet.sol:HostRecordFacet": {
        "src": "contracts/registry/facets/HostRecordFacet.sol:12",
        "version": {
          "withMetadata": "ee80b94f592b5a2d53f792367bbc9222b4de834e08cd483b68a4937c0c9da3a1",
          "withoutMetadata": "ee80b94f592b5a2d53f792367bbc9222b4de834e08cd483b68a4937c0c9da3a1",
          "linkedWithoutMetadata": "ee80b94f592b5a2d53f792367bbc9222b4de834e08cd483b68a4937c0c9da3a1"
        },
        "inherit": [
          "contracts/registry/facets/Facet.sol:Facet",
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet",
          "contracts/registry/facets/interfaces/IHostRecordFacet.sol:IHostRecordFacet"
        ],
        "libraries": [],
        "methods": [
          "setRecord(bytes,bytes,bytes,uint16)",
          "setOperator(bytes32,bytes32,bytes32,address,bool)",
          "setUser(bytes32,bytes32,bytes32,address,uint64)",
          "unsetRecord(bytes32,bytes32,bytes32)",
          "getUser(bytes32,bytes32,bytes32)",
          "getUserExpiry(bytes32,bytes32,bytes32)",
          "getTtl(bytes32,bytes32,bytes32)",
          "isExists(bytes32,bytes32,bytes32)",
          "isOperator(bytes32,bytes32,bytes32,address)",
          "getTokenId(bytes,bytes,bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/TldRecordFacet.sol:TldRecordFacet": {
        "src": "contracts/registry/facets/TldRecordFacet.sol:9",
        "version": {
          "withMetadata": "ec67a3e7e343f1c54a5544e8b14e92609676a7a83364fee31744f1b357fc6036",
          "withoutMetadata": "ec67a3e7e343f1c54a5544e8b14e92609676a7a83364fee31744f1b357fc6036",
          "linkedWithoutMetadata": "ec67a3e7e343f1c54a5544e8b14e92609676a7a83364fee31744f1b357fc6036"
        },
        "inherit": [
          "contracts/registry/facets/Facet.sol:Facet",
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet",
          "contracts/registry/facets/interfaces/ITldRecordFacet.sol:ITldRecordFacet"
        ],
        "libraries": [],
        "methods": [
          "setRecord(enum Chain[],bytes,address,address,uint64,bool,uint8)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setEnable(bytes32,bool)",
          "setWrapper(bytes32,bool,address)",
          "setExpiry(bytes32,uint64)",
          "getOwner(bytes32)",
          "getResolver(bytes32)",
          "getExpiry(bytes32)",
          "getClass(bytes32)",
          "getChains(bytes32)",
          "getWrapper(bytes32)",
          "isExists(bytes32)",
          "isEnable(bytes32)",
          "getTokenId(bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/interfaces/IBaseRegistryFacet.sol:IBaseRegistryFacet": {
        "src": "contracts/registry/facets/interfaces/IBaseRegistryFacet.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenRecord(uint256)",
          "getGracePeriod()",
          "setDefaultWrapper(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/interfaces/IDomainRecordFacet.sol:IDomainRecordFacet": {
        "src": "contracts/registry/facets/interfaces/IDomainRecordFacet.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes,bytes,address,address,uint64)",
          "setResolver(bytes32,bytes32,address)",
          "setOwner(bytes32,bytes32,address)",
          "setOperator(bytes32,bytes32,address,bool)",
          "setUser(bytes32,bytes32,address,uint64)",
          "setExpiry(bytes32,bytes32,uint64)",
          "bridge(bytes32,bytes32)",
          "getOwner(bytes32,bytes32)",
          "getResolver(bytes32,bytes32)",
          "getExpiry(bytes32,bytes32)",
          "getUser(bytes32,bytes32)",
          "getUserExpiry(bytes32,bytes32)",
          "isExists(bytes32,bytes32)",
          "isOperator(bytes32,bytes32,address)",
          "isLive(bytes32,bytes32)",
          "getTokenId(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/interfaces/IHostRecordFacet.sol:IHostRecordFacet": {
        "src": "contracts/registry/facets/interfaces/IHostRecordFacet.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes,bytes,bytes,uint16)",
          "setOperator(bytes32,bytes32,bytes32,address,bool)",
          "setUser(bytes32,bytes32,bytes32,address,uint64)",
          "unsetRecord(bytes32,bytes32,bytes32)",
          "getUser(bytes32,bytes32,bytes32)",
          "getUserExpiry(bytes32,bytes32,bytes32)",
          "getTtl(bytes32,bytes32,bytes32)",
          "isExists(bytes32,bytes32,bytes32)",
          "isOperator(bytes32,bytes32,bytes32,address)",
          "getTokenId(bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/interfaces/ITldRecordFacet.sol:ITldRecordFacet": {
        "src": "contracts/registry/facets/interfaces/ITldRecordFacet.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(enum Chain[],bytes,address,address,uint64,bool,uint8)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setEnable(bytes32,bool)",
          "setWrapper(bytes32,bool,address)",
          "setExpiry(bytes32,uint64)",
          "getOwner(bytes32)",
          "getResolver(bytes32)",
          "getExpiry(bytes32)",
          "getClass(bytes32)",
          "getChains(bytes32)",
          "getWrapper(bytes32)",
          "isExists(bytes32)",
          "isEnable(bytes32)",
          "getTokenId(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/initilaizer/RegistryInit.sol:RegistryInit": {
        "src": "contracts/registry/initilaizer/RegistryInit.sol:12",
        "version": {
          "withMetadata": "7ef797777affb68fb8a53a72a3c52d6e0808e236f203762ce701637624c73d00",
          "withoutMetadata": "7ef797777affb68fb8a53a72a3c52d6e0808e236f203762ce701637624c73d00",
          "linkedWithoutMetadata": "7ef797777affb68fb8a53a72a3c52d6e0808e236f203762ce701637624c73d00"
        },
        "inherit": [
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "contracts/diamond/upgradeInitializers/DiamondInit.sol:DiamondInit"
        ],
        "libraries": [],
        "methods": [
          "init()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/interfaces/IRegistry.sol:IRegistry": {
        "src": "contracts/registry/interfaces/IRegistry.sol:11",
        "inherit": [
          "contracts/registry/facets/Facet.sol:Facet",
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet",
          "contracts/registry/facets/interfaces/IBaseRegistryFacet.sol:IBaseRegistryFacet",
          "contracts/registry/facets/interfaces/IHostRecordFacet.sol:IHostRecordFacet",
          "contracts/registry/facets/interfaces/IDomainRecordFacet.sol:IDomainRecordFacet",
          "contracts/registry/facets/interfaces/ITldRecordFacet.sol:ITldRecordFacet"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/storage/facets/AppStorageFacet.sol:AppStorageFacet": {
        "src": "contracts/registry/storage/facets/AppStorageFacet.sol:7",
        "version": {
          "withMetadata": "aaec441455cf5d09d059551df90879c99ebd81b0f64382778c5c0763b7687c7f",
          "withoutMetadata": "aaec441455cf5d09d059551df90879c99ebd81b0f64382778c5c0763b7687c7f",
          "linkedWithoutMetadata": "aaec441455cf5d09d059551df90879c99ebd81b0f64382778c5c0763b7687c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "s",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AppStorage)19843_storage",
              "contract": "AppStorageFacet",
              "src": "contracts/registry/storage/facets/AppStorageFacet.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_struct(AppStorage)19843_storage": {
              "label": "struct AppStorage",
              "members": [
                {
                  "label": "AT",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "GRACE_PERIOD",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ADMIN_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "OPERATOR_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "REGISTRAR_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "ROOT_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "WRAPPER_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "BRIDGE_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "defaultWrapper",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet": {
        "src": "contracts/registry/storage/facets/RegistryStorageFacet.sol:6",
        "version": {
          "withMetadata": "7c25bf6cc80f82c363bfe73a295024ba7122b6c48e55611fdc7ee294da63bd6a",
          "withoutMetadata": "7c25bf6cc80f82c363bfe73a295024ba7122b6c48e55611fdc7ee294da63bd6a",
          "linkedWithoutMetadata": "7c25bf6cc80f82c363bfe73a295024ba7122b6c48e55611fdc7ee294da63bd6a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/rental/Rental.sol:Rental": {
        "src": "contracts/rental/Rental.sol:12",
        "version": {
          "withMetadata": "2b94bddec94336beb9524458d915ae080cf0e488c3ae02315542cbc37edce871",
          "withoutMetadata": "2b94bddec94336beb9524458d915ae080cf0e488c3ae02315542cbc37edce871",
          "linkedWithoutMetadata": "2b94bddec94336beb9524458d915ae080cf0e488c3ae02315542cbc37edce871"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/rental/interface/IRental.sol:IRental"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "list(address,uint256,uint64,uint256)",
          "unlist(address,uint256)",
          "rent(address,uint256,address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_RENTAL_PERIOD",
            "src": "contracts/rental/Rental.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "301",
              "type": "t_contract(IERC20)6615",
              "contract": "Rental",
              "src": "contracts/rental/Rental.sol:13"
            },
            {
              "label": "MINIMUM_RENTAL_PERIOD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "Rental",
              "src": "contracts/rental/Rental.sol:15"
            },
            {
              "label": "_orders",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_uint256,t_struct(Order)20262_storage)",
              "contract": "Rental",
              "src": "contracts/rental/Rental.sol:19"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Rental",
              "src": "contracts/rental/Rental.sol:85"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)6615": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Order)20262_storage)": {
              "label": "mapping(uint256 => struct IRental.Order)",
              "numberOfBytes": "32"
            },
            "t_struct(Order)20262_storage": {
              "label": "struct IRental.Order",
              "members": [
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "expiry",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/rental/interface/IRental.sol:IRental": {
        "src": "contracts/rental/interface/IRental.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "list(address,uint256,uint64,uint256)",
          "unlist(address,uint256)",
          "rent(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/BaseResolver.sol:BaseResolver": {
        "src": "contracts/resolver/BaseResolver.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver"
        ],
        "libraries": [],
        "methods": [
          "setSynchronizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/PublicResolver.sol:PublicResolver": {
        "src": "contracts/resolver/PublicResolver.sol:14",
        "version": {
          "withMetadata": "aaab8a782464317242bbc6c394b8ad0e2c98e537eaa7f11cec0ea79217e57da9",
          "withoutMetadata": "aaab8a782464317242bbc6c394b8ad0e2c98e537eaa7f11cec0ea79217e57da9",
          "linkedWithoutMetadata": "aaab8a782464317242bbc6c394b8ad0e2c98e537eaa7f11cec0ea79217e57da9"
        },
        "inherit": [
          "contracts/resolver/profile/TypedTextResolver.sol:TypedTextResolver",
          "contracts/resolver/profile/TextResolver.sol:TextResolver",
          "contracts/resolver/profile/NFTResolver.sol:NFTResolver",
          "contracts/resolver/profile/MultiCoinAddressResolver.sol:MultiCoinAddressResolver",
          "contracts/resolver/profile/AddressResolver.sol:AddressResolver",
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/interfaces/IPublicResolver.sol:IPublicResolver",
          "contracts/resolver/profile/interfaces/ITypedTextResolver.sol:ITypedTextResolver",
          "contracts/resolver/profile/interfaces/ITextResolver.sol:ITextResolver",
          "contracts/resolver/profile/interfaces/INFTResolver.sol:INFTResolver",
          "contracts/resolver/profile/interfaces/IMultiCoinAddressResolver.sol:IMultiCoinAddressResolver",
          "contracts/resolver/profile/interfaces/IAddressResolver.sol:IAddressResolver"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_addresses",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_address))",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:8"
            },
            {
              "label": "_reverseAddresses",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_address,t_bytes_storage)",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:77"
            },
            {
              "label": "_multiCoinAddresses",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "MultiCoinAddressResolver",
              "src": "contracts/resolver/profile/MultiCoinAddressResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MultiCoinAddressResolver",
              "src": "contracts/resolver/profile/MultiCoinAddressResolver.sol:52"
            },
            {
              "label": "_nfts",
              "offset": 0,
              "slot": "406",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage)))",
              "contract": "NFTResolver",
              "src": "contracts/resolver/profile/NFTResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "407",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NFTResolver",
              "src": "contracts/resolver/profile/NFTResolver.sol:48"
            },
            {
              "label": "_texts",
              "offset": 0,
              "slot": "457",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_string_storage))",
              "contract": "TextResolver",
              "src": "contracts/resolver/profile/TextResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "458",
              "type": "t_array(t_uint256)50_storage",
              "contract": "TextResolver",
              "src": "contracts/resolver/profile/TextResolver.sol:41"
            },
            {
              "label": "_typedTexts",
              "offset": 0,
              "slot": "508",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage)))",
              "contract": "TypedTextResolver",
              "src": "contracts/resolver/profile/TypedTextResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "509",
              "type": "t_array(t_uint256)50_storage",
              "contract": "TypedTextResolver",
              "src": "contracts/resolver/profile/TypedTextResolver.sol:41"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "559",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PublicResolver",
              "src": "contracts/resolver/PublicResolver.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes_storage)": {
              "label": "mapping(address => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_address))": {
              "label": "mapping(address => mapping(bytes32 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(bytes32 => string)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(uint256 => struct INFTResolver.NFT)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(address => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => struct INFTResolver.NFT))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFT)22551_storage)": {
              "label": "mapping(uint256 => struct INFTResolver.NFT)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(NFT)22551_storage": {
              "label": "struct INFTResolver.NFT",
              "members": [
                {
                  "label": "contract_",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver": {
        "src": "contracts/resolver/interfaces/IBaseResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/interfaces/IPublicResolver.sol:IPublicResolver": {
        "src": "contracts/resolver/interfaces/IPublicResolver.sol:10",
        "inherit": [
          "contracts/resolver/profile/interfaces/ITypedTextResolver.sol:ITypedTextResolver",
          "contracts/resolver/profile/interfaces/ITextResolver.sol:ITextResolver",
          "contracts/resolver/profile/interfaces/INFTResolver.sol:INFTResolver",
          "contracts/resolver/profile/interfaces/IMultiCoinAddressResolver.sol:IMultiCoinAddressResolver",
          "contracts/resolver/profile/interfaces/IAddressResolver.sol:IAddressResolver"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/AddressResolver.sol:AddressResolver": {
        "src": "contracts/resolver/profile/AddressResolver.sol:7",
        "inherit": [
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/profile/interfaces/IAddressResolver.sol:IAddressResolver"
        ],
        "libraries": [],
        "methods": [
          "setAddress(bytes,bytes,bytes,address)",
          "unsetAddress(bytes,bytes,bytes)",
          "getAddress(bytes,bytes,bytes)",
          "setReverseAddress(bytes,bytes,bytes,address)",
          "unsetReverseAddress(bytes,bytes,bytes,address)",
          "getReverseAddress(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_addresses",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_address))",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:8"
            },
            {
              "label": "_reverseAddresses",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_address,t_bytes_storage)",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes_storage)": {
              "label": "mapping(address => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_address))": {
              "label": "mapping(address => mapping(bytes32 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/MultiCoinAddressResolver.sol:MultiCoinAddressResolver": {
        "src": "contracts/resolver/profile/MultiCoinAddressResolver.sol:7",
        "inherit": [
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/profile/interfaces/IMultiCoinAddressResolver.sol:IMultiCoinAddressResolver"
        ],
        "libraries": [],
        "methods": [
          "setMultiCoinAddress(bytes,bytes,bytes,uint256,bytes)",
          "unsetMultiCoinAddress(bytes,bytes,bytes,uint256)",
          "getMultiCoinAddress(bytes,bytes,bytes,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_multiCoinAddresses",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "MultiCoinAddressResolver",
              "src": "contracts/resolver/profile/MultiCoinAddressResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MultiCoinAddressResolver",
              "src": "contracts/resolver/profile/MultiCoinAddressResolver.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/NFTResolver.sol:NFTResolver": {
        "src": "contracts/resolver/profile/NFTResolver.sol:7",
        "inherit": [
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/profile/interfaces/INFTResolver.sol:INFTResolver"
        ],
        "libraries": [],
        "methods": [
          "setNFT(bytes,bytes,bytes,uint256,address,uint256)",
          "unsetNFT(bytes,bytes,bytes,uint256)",
          "getNFT(bytes,bytes,bytes,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_nfts",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage)))",
              "contract": "NFTResolver",
              "src": "contracts/resolver/profile/NFTResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NFTResolver",
              "src": "contracts/resolver/profile/NFTResolver.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(uint256 => struct INFTResolver.NFT)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => struct INFTResolver.NFT))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFT)22551_storage)": {
              "label": "mapping(uint256 => struct INFTResolver.NFT)",
              "numberOfBytes": "32"
            },
            "t_struct(NFT)22551_storage": {
              "label": "struct INFTResolver.NFT",
              "members": [
                {
                  "label": "contract_",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/TextResolver.sol:TextResolver": {
        "src": "contracts/resolver/profile/TextResolver.sol:7",
        "inherit": [
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/profile/interfaces/ITextResolver.sol:ITextResolver"
        ],
        "libraries": [],
        "methods": [
          "setText(bytes,bytes,bytes,string)",
          "unsetText(bytes,bytes,bytes)",
          "getText(bytes,bytes,bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_texts",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_string_storage))",
              "contract": "TextResolver",
              "src": "contracts/resolver/profile/TextResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "TextResolver",
              "src": "contracts/resolver/profile/TextResolver.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(address => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/TypedTextResolver.sol:TypedTextResolver": {
        "src": "contracts/resolver/profile/TypedTextResolver.sol:7",
        "inherit": [
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/profile/interfaces/ITypedTextResolver.sol:ITypedTextResolver"
        ],
        "libraries": [],
        "methods": [
          "setTypedText(bytes,bytes,bytes,bytes,string)",
          "unsetTypedText(bytes,bytes,bytes,bytes)",
          "getTypedText(bytes,bytes,bytes,bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_typedTexts",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage)))",
              "contract": "TypedTextResolver",
              "src": "contracts/resolver/profile/TypedTextResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "TypedTextResolver",
              "src": "contracts/resolver/profile/TypedTextResolver.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(bytes32 => string)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts/resolver/profile/interfaces/IAddressResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setAddress(bytes,bytes,bytes,address)",
          "unsetAddress(bytes,bytes,bytes)",
          "getAddress(bytes,bytes,bytes)",
          "setReverseAddress(bytes,bytes,bytes,address)",
          "unsetReverseAddress(bytes,bytes,bytes,address)",
          "getReverseAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts/resolver/profile/interfaces/IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setContentHash(string,string,string,bytes)",
          "getContentHash(bytes,bytes,bytes)",
          "setTypedContentHash(string,string,string,uint8,bytes)",
          "getTypedContentHash(bytes,bytes,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/IMultiCoinAddressResolver.sol:IMultiCoinAddressResolver": {
        "src": "contracts/resolver/profile/interfaces/IMultiCoinAddressResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setMultiCoinAddress(bytes,bytes,bytes,uint256,bytes)",
          "unsetMultiCoinAddress(bytes,bytes,bytes,uint256)",
          "getMultiCoinAddress(bytes,bytes,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/INFTResolver.sol:INFTResolver": {
        "src": "contracts/resolver/profile/interfaces/INFTResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNFT(bytes,bytes,bytes,uint256,address,uint256)",
          "unsetNFT(bytes,bytes,bytes,uint256)",
          "getNFT(bytes,bytes,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/ITextResolver.sol:ITextResolver": {
        "src": "contracts/resolver/profile/interfaces/ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setText(bytes,bytes,bytes,string)",
          "unsetText(bytes,bytes,bytes)",
          "getText(bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/ITypedTextResolver.sol:ITypedTextResolver": {
        "src": "contracts/resolver/profile/interfaces/ITypedTextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTypedText(bytes,bytes,bytes,bytes,string)",
          "unsetTypedText(bytes,bytes,bytes,bytes)",
          "getTypedText(bytes,bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/root/Root.sol:Root": {
        "src": "contracts/root/Root.sol:14",
        "version": {
          "withMetadata": "5d2a187622405d0ba8f0ea8e2029d8053f34a03a1a0fbbd0e973298bbbf9f5ce",
          "withoutMetadata": "5d2a187622405d0ba8f0ea8e2029d8053f34a03a1a0fbbd0e973298bbbf9f5ce",
          "linkedWithoutMetadata": "5d2a187622405d0ba8f0ea8e2029d8053f34a03a1a0fbbd0e973298bbbf9f5ce"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/root/interfaces/IRoot.sol:IRoot"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "register(enum Chain[],bytes,address,uint64,address,bool,uint8)",
          "renew(bytes,uint64)",
          "transfer(bytes,address)",
          "setEnable(bytes,bool)",
          "setResolver(bytes,address)",
          "setControllerApproval(bytes32,address,bool)",
          "setWrapper(bytes32,bool,address)",
          "isEnable(bytes)",
          "getResolver(bytes)",
          "getAuthorizer()",
          "setAuthorizer(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(IRegistry)19787",
              "contract": "Root",
              "src": "contracts/root/Root.sol:15"
            },
            {
              "label": "_registrar",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistrar)16090",
              "contract": "Root",
              "src": "contracts/root/Root.sol:16"
            },
            {
              "label": "_authorizer",
              "offset": 0,
              "slot": "253",
              "type": "t_address",
              "contract": "Root",
              "src": "contracts/root/Root.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Root",
              "src": "contracts/root/Root.sol:117"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/root/interfaces/IRoot.sol:IRoot": {
        "src": "contracts/root/interfaces/IRoot.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "register(enum Chain[],bytes,address,uint64,address,bool,uint8)",
          "renew(bytes,uint64)",
          "transfer(bytes,address)",
          "setEnable(bytes,bool)",
          "setResolver(bytes,address)",
          "setControllerApproval(bytes32,address,bool)",
          "setWrapper(bytes32,bool,address)",
          "isEnable(bytes)",
          "getResolver(bytes)",
          "getAuthorizer()",
          "setAuthorizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/Helper.sol:Helper": {
        "src": "contracts/utils/Helper.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "valid(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/wrapper/Wrapper.sol:Wrapper": {
        "src": "contracts/wrapper/Wrapper.sol:15",
        "version": {
          "withMetadata": "83bd1b554915db65a94b974ccd6b33854f088b80ab3d276ef8daa821d5a8c033",
          "withoutMetadata": "83bd1b554915db65a94b974ccd6b33854f088b80ab3d276ef8daa821d5a8c033",
          "linkedWithoutMetadata": "83bd1b554915db65a94b974ccd6b33854f088b80ab3d276ef8daa821d5a8c033"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:IERC2981Upgradeable",
          "contracts/wrapper/interfaces/IWrapper.sol:IWrapper",
          "contracts/wrapper/interfaces/IERC4907.sol:IERC4907",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,string,string)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "mint(address,uint256)",
          "burn(uint256)",
          "name()",
          "setName(string)",
          "symbol()",
          "setSymbol(string)",
          "tokenURI(uint256)",
          "setBaseURI(string)",
          "setUser(uint256,address,uint64)",
          "userOf(uint256)",
          "userExpiry(uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(RoyaltyInfo)2120_storage",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2120_storage)",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)48_storage",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:119"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "301",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "351",
              "type": "t_contract(IRegistry)19787",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:16"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "352",
              "type": "t_string_storage",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:22"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "353",
              "type": "t_string_storage",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:23"
            },
            {
              "label": "__baseURI",
              "offset": 0,
              "slot": "354",
              "type": "t_bytes_storage",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:24"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:26"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "356",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "357",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "358",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:348"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2120_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)2120_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/wrapper/interfaces/IERC4907.sol:IERC4907": {
        "src": "contracts/wrapper/interfaces/IERC4907.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setUser(uint256,address,uint64)",
          "userOf(uint256)",
          "userExpiry(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/wrapper/interfaces/IWrapper.sol:IWrapper": {
        "src": "contracts/wrapper/interfaces/IWrapper.sol:8",
        "inherit": [
          "contracts/wrapper/interfaces/IERC4907.sol:IERC4907",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(uint256)",
          "setName(string)",
          "setSymbol(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:51",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:16",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "60a67b0f5bf99d337b977f8fdc227400624a4aa4185d0ab504171ded2cf80f6a",
          "withoutMetadata": "60a67b0f5bf99d337b977f8fdc227400624a4aa4185d0ab504171ded2cf80f6a",
          "linkedWithoutMetadata": "60a67b0f5bf99d337b977f8fdc227400624a4aa4185d0ab504171ded2cf80f6a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:IERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "51",
              "type": "t_struct(RoyaltyInfo)2120_storage",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2120_storage)",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "53",
              "type": "t_array(t_uint256)48_storage",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:119"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2120_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2120_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "d54531611aa8ed4fb7fd314a18366ecff6c08afa9e26a6a980af554521043d6c",
          "withoutMetadata": "d54531611aa8ed4fb7fd314a18366ecff6c08afa9e26a6a980af554521043d6c",
          "linkedWithoutMetadata": "d54531611aa8ed4fb7fd314a18366ecff6c08afa9e26a6a980af554521043d6c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:MulticallUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MulticallUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:34",
        "version": {
          "withMetadata": "47c2c9f9047821d0184b2de02cfca1b60acbb6fcb18ed87b793dbb5558860a82",
          "withoutMetadata": "47c2c9f9047821d0184b2de02cfca1b60acbb6fcb18ed87b793dbb5558860a82",
          "linkedWithoutMetadata": "47c2c9f9047821d0184b2de02cfca1b60acbb6fcb18ed87b793dbb5558860a82"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:12",
        "version": {
          "withMetadata": "86739fe212f58c19f4a8309631f496cdc1aafb465dc63117b31e9fbe141712e3",
          "withoutMetadata": "86739fe212f58c19f4a8309631f496cdc1aafb465dc63117b31e9fbe141712e3",
          "linkedWithoutMetadata": "86739fe212f58c19f4a8309631f496cdc1aafb465dc63117b31e9fbe141712e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "f58b6bb5bdc27b84d8e77e3a57a1083517852d5a7d962817169c0ff5196c81fe",
          "withoutMetadata": "f58b6bb5bdc27b84d8e77e3a57a1083517852d5a7d962817169c0ff5196c81fe",
          "linkedWithoutMetadata": "f58b6bb5bdc27b84d8e77e3a57a1083517852d5a7d962817169c0ff5196c81fe"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "d7b3112336c0a55b0072d61035be32e11396a9ba0ac3f3fe55fde0931eedb0c9",
          "withoutMetadata": "d7b3112336c0a55b0072d61035be32e11396a9ba0ac3f3fe55fde0931eedb0c9",
          "linkedWithoutMetadata": "d7b3112336c0a55b0072d61035be32e11396a9ba0ac3f3fe55fde0931eedb0c9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:9",
        "version": {
          "withMetadata": "c67db880475f4afb8e546a3ae27169ef055ed0005dcb9187d729a6e2c7b6d823",
          "withoutMetadata": "c67db880475f4afb8e546a3ae27169ef055ed0005dcb9187d729a6e2c7b6d823",
          "linkedWithoutMetadata": "c67db880475f4afb8e546a3ae27169ef055ed0005dcb9187d729a6e2c7b6d823"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)4508_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)4508_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)4508_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "32467be4c755f163c124f16dd661889332804814b2011aa6dfd4dbe913de54cd",
          "withoutMetadata": "32467be4c755f163c124f16dd661889332804814b2011aa6dfd4dbe913de54cd",
          "linkedWithoutMetadata": "32467be4c755f163c124f16dd661889332804814b2011aa6dfd4dbe913de54cd"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "7ba23940d960eb49698911ec4fc4c89f0b9769efabfa1c37b0d221291952e9ff",
          "withoutMetadata": "7ba23940d960eb49698911ec4fc4c89f0b9769efabfa1c37b0d221291952e9ff",
          "linkedWithoutMetadata": "7ba23940d960eb49698911ec4fc4c89f0b9769efabfa1c37b0d221291952e9ff"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "12b5542633bf009a1c1f5dcb845141bca657515135acb6d4c8b00ebc32d98e03",
          "withoutMetadata": "12b5542633bf009a1c1f5dcb845141bca657515135acb6d4c8b00ebc32d98e03",
          "linkedWithoutMetadata": "12b5542633bf009a1c1f5dcb845141bca657515135acb6d4c8b00ebc32d98e03"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "957a2e656b6df8634df6ba91e61d607cbf4155f5bc119829792e607f6732895c",
          "withoutMetadata": "957a2e656b6df8634df6ba91e61d607cbf4155f5bc119829792e607f6732895c",
          "linkedWithoutMetadata": "957a2e656b6df8634df6ba91e61d607cbf4155f5bc119829792e607f6732895c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:29",
        "version": {
          "withMetadata": "ce67f7e4eb7d0d72b4507afc94f6d04e657e7ea3137550d929aa3d86b0536fb6",
          "withoutMetadata": "ce67f7e4eb7d0d72b4507afc94f6d04e657e7ea3137550d929aa3d86b0536fb6",
          "linkedWithoutMetadata": "ce67f7e4eb7d0d72b4507afc94f6d04e657e7ea3137550d929aa3d86b0536fb6"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:34"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "90e6933e87952c89aca6c083672096ac30fadaaa3e7d2cacfb61411295837b51",
          "withoutMetadata": "90e6933e87952c89aca6c083672096ac30fadaaa3e7d2cacfb61411295837b51",
          "linkedWithoutMetadata": "90e6933e87952c89aca6c083672096ac30fadaaa3e7d2cacfb61411295837b51"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "fc887492e94e5750ac688a0d55a2ea1cff1b442aa384450063700d3f1af69a80",
          "withoutMetadata": "fc887492e94e5750ac688a0d55a2ea1cff1b442aa384450063700d3f1af69a80",
          "linkedWithoutMetadata": "fc887492e94e5750ac688a0d55a2ea1cff1b442aa384450063700d3f1af69a80"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "d1f3bf29706d290912d6f10221c99d797bc3962825f9d62c772d94001df79944",
          "withoutMetadata": "d1f3bf29706d290912d6f10221c99d797bc3962825f9d62c772d94001df79944",
          "linkedWithoutMetadata": "d1f3bf29706d290912d6f10221c99d797bc3962825f9d62c772d94001df79944"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "0c9e60d59e2063efe2a78c1d10e8eacdf60b97b6908f859d7c982381f8fa257d",
          "withoutMetadata": "0c9e60d59e2063efe2a78c1d10e8eacdf60b97b6908f859d7c982381f8fa257d",
          "linkedWithoutMetadata": "0c9e60d59e2063efe2a78c1d10e8eacdf60b97b6908f859d7c982381f8fa257d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "b24fba8fa1f07a27187c86d6dfcd0f4f863aa2a5ddfbdb17440b2e1dfd4bf52f",
          "withoutMetadata": "b24fba8fa1f07a27187c86d6dfcd0f4f863aa2a5ddfbdb17440b2e1dfd4bf52f",
          "linkedWithoutMetadata": "b24fba8fa1f07a27187c86d6dfcd0f4f863aa2a5ddfbdb17440b2e1dfd4bf52f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/Bridge.sol:Bridge": {
        "src": "contracts/crosschain/Bridge.sol:13",
        "version": {
          "withMetadata": "db665b1f8db619dc513e887d2e61ee560abaee12f870e45d0105a50d9fff6808",
          "withoutMetadata": "db665b1f8db619dc513e887d2e61ee560abaee12f870e45d0105a50d9fff6808",
          "linkedWithoutMetadata": "db665b1f8db619dc513e887d2e61ee560abaee12f870e45d0105a50d9fff6808"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/IBridge.sol:IBridge",
          "contracts/crosschain/interfaces/IReceiver.sol:IReceiver"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint8,address,address)",
          "pause()",
          "unpause()",
          "receive_(bytes)",
          "getRef(uint256,uint8,uint8,bytes32,bytes32,address,uint64)",
          "estimateFee(uint8,uint8,bytes32,bytes32)",
          "bridge(uint256,bytes32,uint8,uint8,bytes32,bytes32)",
          "accept(uint256,bytes32,uint8,uint8,bytes,bytes,address,uint64)",
          "getAcceptedRequest(bytes32)",
          "getBridgedRequest(bytes32)",
          "getRemoteBridge(uint8)",
          "setRemoteBridge(uint8,address)",
          "getNonce()",
          "isReceived(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "151",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "301",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "302",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "_selfChain",
              "offset": 0,
              "slot": "351",
              "type": "t_enum(Chain)13793",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:18"
            },
            {
              "label": "_registry",
              "offset": 1,
              "slot": "351",
              "type": "t_contract(IRegistry)19787",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:20"
            },
            {
              "label": "_portal",
              "offset": 0,
              "slot": "352",
              "type": "t_contract(IPortal)10152",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:21"
            },
            {
              "label": "_acceptedRequests",
              "offset": 0,
              "slot": "353",
              "type": "t_mapping(t_bytes32,t_struct(AcceptedRequest)9933_storage)",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:23"
            },
            {
              "label": "_bridgedRequests",
              "offset": 0,
              "slot": "354",
              "type": "t_mapping(t_bytes32,t_struct(BridgedRequest)9948_storage)",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:24"
            },
            {
              "label": "_receivedRequest",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:25"
            },
            {
              "label": "_remoteBridges",
              "offset": 0,
              "slot": "356",
              "type": "t_mapping(t_enum(Chain)13793,t_address)",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:27"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "357",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "358",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Bridge",
              "src": "contracts/crosschain/Bridge.sol:204"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IPortal)10152": {
              "label": "contract IPortal",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(Chain)13793": {
              "label": "enum Chain",
              "members": [
                "ETHEREUM",
                "BNB",
                "POLYGON",
                "AVALANCHE",
                "FANTOM",
                "OPTIMISM",
                "ARBITRUM",
                "IOTEX",
                "OKC",
                "GNOSIS",
                "CELO",
                "HARMONY",
                "MOONBEAM",
                "MOONRIVER",
                "ZKSYNC",
                "POLYGON_ZKEVM"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(CrossChainProvider)13800": {
              "label": "enum CrossChainProvider",
              "members": [
                "LAYERZERO",
                "MULTICHAIN",
                "ROUTER_PROTOCOL",
                "NOMAD"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AcceptedRequest)9933_storage)": {
              "label": "mapping(bytes32 => struct IBridge.AcceptedRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(BridgedRequest)9948_storage)": {
              "label": "mapping(bytes32 => struct IBridge.BridgedRequest)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Chain)13793,t_address)": {
              "label": "mapping(enum Chain => address)",
              "numberOfBytes": "32"
            },
            "t_struct(AcceptedRequest)9933_storage": {
              "label": "struct IBridge.AcceptedRequest",
              "members": [
                {
                  "label": "srcChain",
                  "type": "t_enum(Chain)13793",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "provider",
                  "type": "t_enum(CrossChainProvider)13800",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "tld",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "name",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "expiry",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(BridgedRequest)9948_storage": {
              "label": "struct IBridge.BridgedRequest",
              "members": [
                {
                  "label": "dstChain",
                  "type": "t_enum(Chain)13793",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "provider",
                  "type": "t_enum(CrossChainProvider)13800",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "tld",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "name",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "expiry",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/Portal.sol:Portal": {
        "src": "contracts/crosschain/Portal.sol:11",
        "version": {
          "withMetadata": "b1f0d2fabe6f2b9d4cb7a08b45a3221b39863f285e02a868a08a3b2b5fc487b6",
          "withoutMetadata": "b1f0d2fabe6f2b9d4cb7a08b45a3221b39863f285e02a868a08a3b2b5fc487b6",
          "linkedWithoutMetadata": "b1f0d2fabe6f2b9d4cb7a08b45a3221b39863f285e02a868a08a3b2b5fc487b6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/IPortal.sol:IPortal"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "send_(address payable,uint8,uint8,bytes)",
          "receive_(uint8,bytes)",
          "estimateFee(uint8,uint8,bytes)",
          "getProvider(uint8)",
          "setProvider(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_providers",
              "offset": 0,
              "slot": "251",
              "type": "t_mapping(t_enum(CrossChainProvider)13800,t_address)",
              "contract": "Portal",
              "src": "contracts/crosschain/Portal.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Portal",
              "src": "contracts/crosschain/Portal.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(CrossChainProvider)13800": {
              "label": "enum CrossChainProvider",
              "members": [
                "LAYERZERO",
                "MULTICHAIN",
                "ROUTER_PROTOCOL",
                "NOMAD"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(CrossChainProvider)13800,t_address)": {
              "label": "mapping(enum CrossChainProvider => address)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/Synchronizer.sol:Synchronizer": {
        "src": "contracts/crosschain/Synchronizer.sol:15",
        "version": {
          "withMetadata": "55b065f9a5c4deaa386a8923f0ad0aabaf9379ab39d31bee0f6ee10fc14cfef6",
          "withoutMetadata": "55b065f9a5c4deaa386a8923f0ad0aabaf9379ab39d31bee0f6ee10fc14cfef6",
          "linkedWithoutMetadata": "55b065f9a5c4deaa386a8923f0ad0aabaf9379ab39d31bee0f6ee10fc14cfef6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/IReceiver.sol:IReceiver",
          "contracts/crosschain/interfaces/ISynchronizer.sol:ISynchronizer"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint8,address,address)",
          "pause()",
          "unpause()",
          "estimateSyncFee(uint8,uint8,enum Chain[],bytes)",
          "sync(address payable,uint8,uint8,enum Chain[],bytes)",
          "receive_(bytes)",
          "getRemoteSynchronizer(uint8)",
          "setRemoteSynchronizer(uint8,address)",
          "getUserDefaultProvider(address)",
          "setUserDefaultProvider(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_selfChain",
              "offset": 0,
              "slot": "301",
              "type": "t_enum(Chain)13793",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:20"
            },
            {
              "label": "_registrar",
              "offset": 1,
              "slot": "301",
              "type": "t_contract(IRegistrar)16090",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:22"
            },
            {
              "label": "_portal",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(IPortal)10152",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:23"
            },
            {
              "label": "_resolver",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IPublicResolver)20804",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:24"
            },
            {
              "label": "_remoteSynchronizers",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_enum(Chain)13793,t_address)",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:26"
            },
            {
              "label": "_userDefaultProviders",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_address,t_enum(CrossChainProvider)13800)",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:27"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "306",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Synchronizer",
              "src": "contracts/crosschain/Synchronizer.sol:164"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IPortal)10152": {
              "label": "contract IPortal",
              "numberOfBytes": "20"
            },
            "t_contract(IPublicResolver)20804": {
              "label": "contract IPublicResolver",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(Chain)13793": {
              "label": "enum Chain",
              "members": [
                "ETHEREUM",
                "BNB",
                "POLYGON",
                "AVALANCHE",
                "FANTOM",
                "OPTIMISM",
                "ARBITRUM",
                "IOTEX",
                "OKC",
                "GNOSIS",
                "CELO",
                "HARMONY",
                "MOONBEAM",
                "MOONRIVER",
                "ZKSYNC",
                "POLYGON_ZKEVM"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(CrossChainProvider)13800": {
              "label": "enum CrossChainProvider",
              "members": [
                "LAYERZERO",
                "MULTICHAIN",
                "ROUTER_PROTOCOL",
                "NOMAD"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(CrossChainProvider)13800)": {
              "label": "mapping(address => enum CrossChainProvider)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Chain)13793,t_address)": {
              "label": "mapping(enum Chain => address)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication": {
        "src": "contracts/crosschain/SynchronizerApplication.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication"
        ],
        "libraries": [],
        "methods": [
          "receiveSync(bytes)",
          "getSynchronizer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/interfaces/IBridge.sol:IBridge": {
        "src": "contracts/crosschain/interfaces/IBridge.sol:9",
        "inherit": [
          "contracts/crosschain/interfaces/IReceiver.sol:IReceiver"
        ],
        "libraries": [],
        "methods": [
          "estimateFee(uint8,uint8,bytes32,bytes32)",
          "bridge(uint256,bytes32,uint8,uint8,bytes32,bytes32)",
          "accept(uint256,bytes32,uint8,uint8,bytes,bytes,address,uint64)",
          "getAcceptedRequest(bytes32)",
          "getBridgedRequest(bytes32)",
          "getRemoteBridge(uint8)",
          "setRemoteBridge(uint8,address)",
          "getNonce()",
          "getRef(uint256,uint8,uint8,bytes32,bytes32,address,uint64)",
          "isReceived(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/interfaces/IPortal.sol:IPortal": {
        "src": "contracts/crosschain/interfaces/IPortal.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "send_(address payable,uint8,uint8,bytes)",
          "receive_(uint8,bytes)",
          "estimateFee(uint8,uint8,bytes)",
          "getProvider(uint8)",
          "setProvider(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/interfaces/IReceiver.sol:IReceiver": {
        "src": "contracts/crosschain/interfaces/IReceiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receive_(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/interfaces/ISynchronizer.sol:ISynchronizer": {
        "src": "contracts/crosschain/interfaces/ISynchronizer.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "estimateSyncFee(uint8,uint8,enum Chain[],bytes)",
          "sync(address payable,uint8,uint8,enum Chain[],bytes)",
          "getRemoteSynchronizer(uint8)",
          "setRemoteSynchronizer(uint8,address)",
          "getUserDefaultProvider(address)",
          "setUserDefaultProvider(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication": {
        "src": "contracts/crosschain/interfaces/ISynchronizerApplication.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveSync(bytes)",
          "getSynchronizer()",
          "setSynchronizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/interfaces/IBaseProvider.sol:IBaseProvider": {
        "src": "contracts/crosschain/providers/interfaces/IBaseProvider.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "send_(address payable,uint8,bytes)",
          "receive_(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:LayerZeroEndpointMock": {
        "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:16",
        "version": {
          "withMetadata": "d90381dfa3c224f476c7f39871af3f69bce980c304dab84832f33b5d5863461e",
          "withoutMetadata": "d90381dfa3c224f476c7f39871af3f69bce980c304dab84832f33b5d5863461e",
          "linkedWithoutMetadata": "d90381dfa3c224f476c7f39871af3f69bce980c304dab84832f33b5d5863461e"
        },
        "inherit": [
          "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroEndpoint.sol:ILayerZeroEndpoint",
          "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig"
        ],
        "libraries": [],
        "methods": [
          "(uint16)",
          "setEstimatedFees(uint256,uint256)",
          "getChainId()",
          "setDestLzEndpoint(address,address)",
          "send(uint16,bytes,bytes,address payable,address,bytes)",
          "receivePayload(uint16,bytes,address,uint64,uint256,bytes)",
          "blockNextMsg()",
          "getLengthOfQueue(uint16,bytes)",
          "estimateFees(uint16,address,bytes,bool,bytes)",
          "packedBytesToAddr(bytes)",
          "addrToPackedBytes(address)",
          "setConfig(uint16,uint16,uint256,bytes)",
          "getConfig(uint16,uint16,address,uint256)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "getSendVersion(address)",
          "getReceiveVersion(address)",
          "getInboundNonce(uint16,bytes)",
          "getOutboundNonce(uint16,address)",
          "forceResumeReceive(uint16,bytes)",
          "retryPayload(uint16,bytes,bytes)",
          "hasStoredPayload(uint16,bytes)",
          "isSendingPayload()",
          "isReceivingPayload()",
          "getSendLibraryAddress(address)",
          "getReceiveLibraryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LayerZeroEndpointMock",
            "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lzEndpointLookup",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:17"
            },
            {
              "label": "mockChainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint16",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:19"
            },
            {
              "label": "mockOracle",
              "offset": 2,
              "slot": "1",
              "type": "t_address_payable",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:20"
            },
            {
              "label": "mockRelayer",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:21"
            },
            {
              "label": "mockBlockConfirmations",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:22"
            },
            {
              "label": "mockLibraryVersion",
              "offset": 0,
              "slot": "4",
              "type": "t_uint16",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:23"
            },
            {
              "label": "mockStaticNativeFee",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:24"
            },
            {
              "label": "mockLayerZeroVersion",
              "offset": 0,
              "slot": "6",
              "type": "t_uint16",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:25"
            },
            {
              "label": "nativeFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:26"
            },
            {
              "label": "zroFee",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:27"
            },
            {
              "label": "nextMsgBLocked",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:28"
            },
            {
              "label": "inboundNonce",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:43"
            },
            {
              "label": "outboundNonce",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint16,t_mapping(t_address,t_uint64))",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:45"
            },
            {
              "label": "storedPayload",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)10372_storage))",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:47"
            },
            {
              "label": "msgsToDeliver",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)10379_storage)dyn_storage))",
              "contract": "LayerZeroEndpointMock",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroEndpointMock.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(QueuedPayload)10379_storage)dyn_storage": {
              "label": "struct LayerZeroEndpointMock.QueuedPayload[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_memory_ptr": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint64)": {
              "label": "mapping(address => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)10379_storage)dyn_storage)": {
              "label": "mapping(bytes => struct LayerZeroEndpointMock.QueuedPayload[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)10372_storage)": {
              "label": "mapping(bytes => struct LayerZeroEndpointMock.StoredPayload)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes_memory_ptr,t_uint64)": {
              "label": "mapping(bytes => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_address,t_uint64))": {
              "label": "mapping(uint16 => mapping(address => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)10379_storage)dyn_storage))": {
              "label": "mapping(uint16 => mapping(bytes => struct LayerZeroEndpointMock.QueuedPayload[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)10372_storage))": {
              "label": "mapping(uint16 => mapping(bytes => struct LayerZeroEndpointMock.StoredPayload))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))": {
              "label": "mapping(uint16 => mapping(bytes => uint64))",
              "numberOfBytes": "32"
            },
            "t_struct(QueuedPayload)10379_storage": {
              "label": "struct LayerZeroEndpointMock.QueuedPayload",
              "members": [
                {
                  "label": "dstAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nonce",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "payload",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(StoredPayload)10372_storage": {
              "label": "struct LayerZeroEndpointMock.StoredPayload",
              "members": [
                {
                  "label": "payloadLength",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dstAddress",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "payloadHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:LayerZeroProvider": {
        "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:10",
        "version": {
          "withMetadata": "ae40d47e8e0057dab4bb085acd4bf13d7297593631668b17746684a825267bc7",
          "withoutMetadata": "ae40d47e8e0057dab4bb085acd4bf13d7297593631668b17746684a825267bc7",
          "linkedWithoutMetadata": "ae40d47e8e0057dab4bb085acd4bf13d7297593631668b17746684a825267bc7"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroProvider.sol:ILayerZeroProvider"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "estimateFee(uint8,bytes)",
          "send_(address payable,uint8,bytes)",
          "lzReceive(uint16,bytes,uint64,bytes)",
          "receive_(bytes)",
          "getChainId(uint8)",
          "setChainId(uint8,uint16)",
          "setTrustedRemote(uint16,bytes)",
          "isTrustedRemote(uint16,bytes)",
          "setV1AdaptorParameters(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_portal",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(IPortal)10152",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:14"
            },
            {
              "label": "_lzEndpoint",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(ILayerZeroEndpoint)11737",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:15"
            },
            {
              "label": "_chainIds",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_enum(Chain)13793,t_uint16)",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:17"
            },
            {
              "label": "trustedRemotes",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint16,t_bytes_storage)",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:18"
            },
            {
              "label": "v1AdaptorParameters",
              "offset": 0,
              "slot": "255",
              "type": "t_bytes_storage",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)50_storage",
              "contract": "LayerZeroProvider",
              "src": "contracts/crosschain/providers/layerzero/LayerZeroProvider.sol:119"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ILayerZeroEndpoint)11737": {
              "label": "contract ILayerZeroEndpoint",
              "numberOfBytes": "20"
            },
            "t_contract(IPortal)10152": {
              "label": "contract IPortal",
              "numberOfBytes": "20"
            },
            "t_enum(Chain)13793": {
              "label": "enum Chain",
              "members": [
                "ETHEREUM",
                "BNB",
                "POLYGON",
                "AVALANCHE",
                "FANTOM",
                "OPTIMISM",
                "ARBITRUM",
                "IOTEX",
                "OKC",
                "GNOSIS",
                "CELO",
                "HARMONY",
                "MOONBEAM",
                "MOONRIVER",
                "ZKSYNC",
                "POLYGON_ZKEVM"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Chain)13793,t_uint16)": {
              "label": "mapping(enum Chain => uint16)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_bytes_storage)": {
              "label": "mapping(uint16 => bytes)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroEndpoint.sol:ILayerZeroEndpoint": {
        "src": "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroEndpoint.sol:7",
        "inherit": [
          "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig"
        ],
        "libraries": [],
        "methods": [
          "send(uint16,bytes,bytes,address payable,address,bytes)",
          "receivePayload(uint16,bytes,address,uint64,uint256,bytes)",
          "getInboundNonce(uint16,bytes)",
          "getOutboundNonce(uint16,address)",
          "estimateFees(uint16,address,bytes,bool,bytes)",
          "getChainId()",
          "retryPayload(uint16,bytes,bytes)",
          "hasStoredPayload(uint16,bytes)",
          "getSendLibraryAddress(address)",
          "getReceiveLibraryAddress(address)",
          "isSendingPayload()",
          "isReceivingPayload()",
          "getConfig(uint16,uint16,address,uint256)",
          "getSendVersion(address)",
          "getReceiveVersion(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroProvider.sol:ILayerZeroProvider": {
        "src": "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroProvider.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "estimateFee(uint8,bytes)",
          "send_(address payable,uint8,bytes)",
          "getChainId(uint8)",
          "setChainId(uint8,uint16)",
          "setTrustedRemote(uint16,bytes)",
          "isTrustedRemote(uint16,bytes)",
          "setV1AdaptorParameters(uint256)",
          "lzReceive(uint16,bytes,uint64,bytes)",
          "receive_(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroReceiver.sol:ILayerZeroReceiver": {
        "src": "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroReceiver.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "lzReceive(uint16,bytes,uint64,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroUserApplicationConfig.sol:ILayerZeroUserApplicationConfig": {
        "src": "contracts/crosschain/providers/layerzero/interfaces/ILayerZeroUserApplicationConfig.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setConfig(uint16,uint16,uint256,bytes)",
          "setSendVersion(uint16)",
          "setReceiveVersion(uint16)",
          "forceResumeReceive(uint16,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/multichain/interfaces/IMultichainAnyCallV6Provider.sol:IMultichainAnyCallV6Provider": {
        "src": "contracts/crosschain/providers/multichain/interfaces/IMultichainAnyCallV6Provider.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "estimateFee(uint16,bytes)",
          "send_(address payable,uint8,bytes)",
          "getChainId(uint8)",
          "setChainId(uint8,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/router-protocol/interfaces/IHandler.sol:IHandler": {
        "src": "contracts/crosschain/providers/router-protocol/interfaces/IHandler.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "MapContract((address,uint8,address))",
          "UnMapContract((address,uint8,address))",
          "genericDeposit(uint8,bytes,uint256,uint256,address)",
          "fetch_chainID()",
          "replayGenericDeposit(uint8,uint64,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/crosschain/providers/router-protocol/interfaces/IRouterProtocolV1Provider.sol:IRouterProtocolV1Provider": {
        "src": "contracts/crosschain/providers/router-protocol/interfaces/IRouterProtocolV1Provider.sol:6",
        "inherit": [
          "contracts/crosschain/providers/interfaces/IBaseProvider.sol:IBaseProvider"
        ],
        "libraries": [],
        "methods": [
          "setFeeToken(address)",
          "getFeeToken(address)",
          "setHandler(address)",
          "getHandler()",
          "routerReply(uint8,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/Diamond.sol:Diamond": {
        "src": "contracts/diamond/Diamond.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Diamond",
            "src": "contracts/diamond/Diamond.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:198"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/access/AccessControl.sol:AccessControl": {
        "src": "contracts/diamond/access/AccessControl.sol:12",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/facets/DiamondCutFacet.sol:DiamondCutFacet": {
        "src": "contracts/diamond/facets/DiamondCutFacet.sol:15",
        "version": {
          "withMetadata": "d6ae5fe5d775551a782c8f6cc0dc4340292c5cb85aa7730f318d166def9d7350",
          "withoutMetadata": "d6ae5fe5d775551a782c8f6cc0dc4340292c5cb85aa7730f318d166def9d7350",
          "linkedWithoutMetadata": "d6ae5fe5d775551a782c8f6cc0dc4340292c5cb85aa7730f318d166def9d7350"
        },
        "inherit": [
          "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut"
        ],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamondCut.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:198"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/facets/DiamondLoupeFacet.sol:DiamondLoupeFacet": {
        "src": "contracts/diamond/facets/DiamondLoupeFacet.sol:15",
        "version": {
          "withMetadata": "7726325a25ac557d4cefc364579228becd1b36aa6d109ef73c95001505a262f6",
          "withoutMetadata": "7726325a25ac557d4cefc364579228becd1b36aa6d109ef73c95001505a262f6",
          "linkedWithoutMetadata": "7726325a25ac557d4cefc364579228becd1b36aa6d109ef73c95001505a262f6"
        },
        "inherit": [
          "contracts/diamond/interfaces/IERC165.sol:IERC165",
          "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe"
        ],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IDiamondCut.sol:IDiamondCut": {
        "src": "contracts/diamond/interfaces/IDiamondCut.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "diamondCut(struct IDiamondCut.FacetCut[],address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IDiamondLoupe.sol:IDiamondLoupe": {
        "src": "contracts/diamond/interfaces/IDiamondLoupe.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "facets()",
          "facetFunctionSelectors(address)",
          "facetAddresses()",
          "facetAddress(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IERC165.sol:IERC165": {
        "src": "contracts/diamond/interfaces/IERC165.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/interfaces/IERC173.sol:IERC173": {
        "src": "contracts/diamond/interfaces/IERC173.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/libraries/LibDiamond.sol:LibDiamond": {
        "src": "contracts/diamond/libraries/LibDiamond.sol:15",
        "version": {
          "withMetadata": "3a7fe2f9bc8f14e6dac2b794c483f21eb8ff8a0c47c918e12b6da2d27b7db658",
          "withoutMetadata": "3a7fe2f9bc8f14e6dac2b794c483f21eb8ff8a0c47c918e12b6da2d27b7db658",
          "linkedWithoutMetadata": "3a7fe2f9bc8f14e6dac2b794c483f21eb8ff8a0c47c918e12b6da2d27b7db658"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:198"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/diamond/libraries/LibDiamond.sol:198"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet": {
        "src": "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:7",
        "version": {
          "withMetadata": "823c13a3ab4bbca641c8c58af44476f5f6ec60db3d5287bb449042bd8041eb77",
          "withoutMetadata": "823c13a3ab4bbca641c8c58af44476f5f6ec60db3d5287bb449042bd8041eb77",
          "linkedWithoutMetadata": "823c13a3ab4bbca641c8c58af44476f5f6ec60db3d5287bb449042bd8041eb77"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/diamond/upgradeInitializers/DiamondInit.sol:DiamondInit": {
        "src": "contracts/diamond/upgradeInitializers/DiamondInit.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/migration/MigrationController.sol:MigrationController": {
        "src": "contracts/migration/MigrationController.sol:7",
        "version": {
          "withMetadata": "feb001bedab33ed4750e212b36776f7723e9347ac10f12b9b2d25ca9cefaf906",
          "withoutMetadata": "feb001bedab33ed4750e212b36776f7723e9347ac10f12b9b2d25ca9cefaf906",
          "linkedWithoutMetadata": "feb001bedab33ed4750e212b36776f7723e9347ac10f12b9b2d25ca9cefaf906"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "migrate(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_baseRegistrar",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(IRegistrar)16090",
              "contract": "MigrationController",
              "src": "contracts/migration/MigrationController.sol:8"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/migration/interfaces/ILegacyBaseRegistrar.sol:ILegacyBaseRegistrar": {
        "src": "contracts/migration/interfaces/ILegacyBaseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "nameExpiry(uint256)",
          "deregister(uint256)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/mock/TokenMock.sol:TokenMock": {
        "src": "contracts/mock/TokenMock.sol:9",
        "version": {
          "withMetadata": "0d75522db7f19f1cc5e4a2350099b07ef9da8ba15a7be73ee615ef2a91194d60",
          "withoutMetadata": "0d75522db7f19f1cc5e4a2350099b07ef9da8ba15a7be73ee615ef2a91194d60",
          "linkedWithoutMetadata": "0d75522db7f19f1cc5e4a2350099b07ef9da8ba15a7be73ee615ef2a91194d60"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "pause()",
          "unpause()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenMock",
            "src": "contracts/mock/TokenMock.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)4508_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)4508_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)4508_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/BaseRegistrarController.sol:BaseRegistrarController": {
        "src": "contracts/registrar/BaseRegistrarController.sol:16",
        "inherit": [
          "contracts/utils/Helper.sol:Helper",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "301",
              "type": "t_contract(IERC20Upgradeable)1518",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:20"
            },
            {
              "label": "_registrar",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(IRegistrar)16090",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:21"
            },
            {
              "label": "_root",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IRoot)23271",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:22"
            },
            {
              "label": "COIN_ID",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1518": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRoot)23271": {
              "label": "contract IRoot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/BatchRegistrarController.sol:BatchRegistrarController": {
        "src": "contracts/registrar/BatchRegistrarController.sol:7",
        "version": {
          "withMetadata": "9c4de035790f4509e08c1e46241a243a64dcd9cb39363aaae7c0b6830b61c0ed",
          "withoutMetadata": "9c4de035790f4509e08c1e46241a243a64dcd9cb39363aaae7c0b6830b61c0ed",
          "linkedWithoutMetadata": "9c4de035790f4509e08c1e46241a243a64dcd9cb39363aaae7c0b6830b61c0ed"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "register(address,bytes[],bytes[],address,uint64[])",
          "register(address,bytes[],bytes[],address[],uint64[],uint256[],bytes[])",
          "renew(address,bytes[],bytes[],uint64[])",
          "renew(address,bytes[],bytes[],uint64[],uint256[],bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/ClassicalRegistrarController.sol:ClassicalRegistrarController": {
        "src": "contracts/registrar/ClassicalRegistrarController.sol:7",
        "version": {
          "withMetadata": "3e4a16a9b60b583426d21d0f260f1d5f6d1a39169b3c2a65888b9d96d936a492",
          "withoutMetadata": "3e4a16a9b60b583426d21d0f260f1d5f6d1a39169b3c2a65888b9d96d936a492",
          "linkedWithoutMetadata": "3e4a16a9b60b583426d21d0f260f1d5f6d1a39169b3c2a65888b9d96d936a492"
        },
        "inherit": [
          "contracts/registrar/BaseRegistrarController.sol:BaseRegistrarController",
          "contracts/utils/Helper.sol:Helper",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/registrar/interfaces/IClassicalRegistrarController.sol:IClassicalRegistrarController",
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256)",
          "isAvailable(bytes)",
          "isAvailable(bytes,bytes)",
          "register(bytes,bytes,address,uint64)",
          "register(bytes,bytes,address,uint64,uint256,bytes)",
          "renew(bytes,bytes,uint64)",
          "renew(bytes,bytes,uint64,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "301",
              "type": "t_contract(IERC20Upgradeable)1518",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:20"
            },
            {
              "label": "_registrar",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(IRegistrar)16090",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:21"
            },
            {
              "label": "_root",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IRoot)23271",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:22"
            },
            {
              "label": "COIN_ID",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:71"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ClassicalRegistrarController",
              "src": "contracts/registrar/ClassicalRegistrarController.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1518": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRoot)23271": {
              "label": "contract IRoot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/OmniRegistrarController.sol:OmniRegistrarController": {
        "src": "contracts/registrar/OmniRegistrarController.sol:9",
        "version": {
          "withMetadata": "7c5a12b73cadb6173177f986367bece90f17c3ea9816dbc8a6a2da7a1694fa41",
          "withoutMetadata": "7c5a12b73cadb6173177f986367bece90f17c3ea9816dbc8a6a2da7a1694fa41",
          "linkedWithoutMetadata": "7c5a12b73cadb6173177f986367bece90f17c3ea9816dbc8a6a2da7a1694fa41"
        },
        "inherit": [
          "contracts/registrar/BaseRegistrarController.sol:BaseRegistrarController",
          "contracts/utils/Helper.sol:Helper",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/registrar/interfaces/IOmniRegistrarController.sol:IOmniRegistrarController",
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256)",
          "isAvailable(bytes)",
          "isAvailable(bytes,bytes)",
          "register(bytes,bytes,address,uint64)",
          "register(bytes,bytes,address,uint64,uint256,bytes)",
          "renew(bytes,bytes,uint64)",
          "renew(bytes,bytes,uint64,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "301",
              "type": "t_contract(IERC20Upgradeable)1518",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:20"
            },
            {
              "label": "_registrar",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(IRegistrar)16090",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:21"
            },
            {
              "label": "_root",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IRoot)23271",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:22"
            },
            {
              "label": "COIN_ID",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:71"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "OmniRegistrarController",
              "src": "contracts/registrar/OmniRegistrarController.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1518": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRoot)23271": {
              "label": "contract IRoot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/Registrar.sol:Registrar": {
        "src": "contracts/registrar/Registrar.sol:15",
        "version": {
          "withMetadata": "b658e2fc93ad197355ad4827033344a136271be7fdffe58b655a2708c4c84070",
          "withoutMetadata": "b658e2fc93ad197355ad4827033344a136271be7fdffe58b655a2708c4c84070",
          "linkedWithoutMetadata": "b658e2fc93ad197355ad4827033344a136271be7fdffe58b655a2708c4c84070"
        },
        "inherit": [
          "contracts/utils/Helper.sol:Helper",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/registrar/interfaces/IRegistrar.sol:IRegistrar"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "getExpiry(bytes,bytes)",
          "isAvailable(bytes)",
          "isAvailable(bytes,bytes)",
          "isExists(bytes,bytes)",
          "isExists(bytes32)",
          "isControllerApproved(bytes32,address)",
          "setControllerApproval(bytes32,address,bool)",
          "register(address,bytes,bytes,address,uint64)",
          "renew(address,bytes,bytes,uint64)",
          "setSynchronizer(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "252",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "contract": "Registrar",
              "src": "contracts/registrar/Registrar.sol:21"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(IRegistry)19787",
              "contract": "Registrar",
              "src": "contracts/registrar/Registrar.sol:23"
            },
            {
              "label": "_resolver",
              "offset": 0,
              "slot": "254",
              "type": "t_contract(IPublicResolver)20804",
              "contract": "Registrar",
              "src": "contracts/registrar/Registrar.sol:24"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "255",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Registrar",
              "src": "contracts/registrar/Registrar.sol:144"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IPublicResolver)20804": {
              "label": "contract IPublicResolver",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/UniversalRegistrarController.sol:UniversalRegistrarController": {
        "src": "contracts/registrar/UniversalRegistrarController.sol:9",
        "version": {
          "withMetadata": "eaf8b5639cc965650284b1b13306b2a0b6f28c89792925d68491793608f13ef3",
          "withoutMetadata": "eaf8b5639cc965650284b1b13306b2a0b6f28c89792925d68491793608f13ef3",
          "linkedWithoutMetadata": "eaf8b5639cc965650284b1b13306b2a0b6f28c89792925d68491793608f13ef3"
        },
        "inherit": [
          "contracts/registrar/BaseRegistrarController.sol:BaseRegistrarController",
          "contracts/utils/Helper.sol:Helper",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "contracts/registrar/interfaces/IUniversalRegistrarController.sol:IUniversalRegistrarController",
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,uint256)",
          "isAvailable(bytes)",
          "isAvailable(bytes,bytes)",
          "register(bytes,bytes,address,uint64)",
          "register(bytes,bytes,address,uint64,uint256,bytes)",
          "renew(bytes,bytes,uint64)",
          "renew(bytes,bytes,uint64,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "301",
              "type": "t_contract(IERC20Upgradeable)1518",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:20"
            },
            {
              "label": "_registrar",
              "offset": 0,
              "slot": "302",
              "type": "t_contract(IRegistrar)16090",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:21"
            },
            {
              "label": "_root",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IRoot)23271",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:22"
            },
            {
              "label": "COIN_ID",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:23"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseRegistrarController",
              "src": "contracts/registrar/BaseRegistrarController.sol:71"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UniversalRegistrarController",
              "src": "contracts/registrar/UniversalRegistrarController.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1518": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRoot)23271": {
              "label": "contract IRoot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController": {
        "src": "contracts/registrar/interfaces/IBaseRegistrarController.sol:5",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable"
        ],
        "libraries": [],
        "methods": [
          "register(bytes,bytes,address,uint64)",
          "renew(bytes,bytes,uint64)",
          "register(bytes,bytes,address,uint64,uint256,bytes)",
          "renew(bytes,bytes,uint64,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/interfaces/IClassicalRegistrarController.sol:IClassicalRegistrarController": {
        "src": "contracts/registrar/interfaces/IClassicalRegistrarController.sol:6",
        "inherit": [
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/interfaces/IOmniRegistrarController.sol:IOmniRegistrarController": {
        "src": "contracts/registrar/interfaces/IOmniRegistrarController.sol:6",
        "inherit": [
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/interfaces/IRegistrar.sol:IRegistrar": {
        "src": "contracts/registrar/interfaces/IRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getExpiry(bytes,bytes)",
          "isAvailable(bytes)",
          "isAvailable(bytes,bytes)",
          "isExists(bytes,bytes)",
          "isExists(bytes32)",
          "isControllerApproved(bytes32,address)",
          "setControllerApproval(bytes32,address,bool)",
          "register(address,bytes,bytes,address,uint64)",
          "renew(address,bytes,bytes,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registrar/interfaces/IUniversalRegistrarController.sol:IUniversalRegistrarController": {
        "src": "contracts/registrar/interfaces/IUniversalRegistrarController.sol:6",
        "inherit": [
          "contracts/registrar/interfaces/IBaseRegistrarController.sol:IBaseRegistrarController",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/Registry.sol:Registry": {
        "src": "contracts/registry/Registry.sol:5",
        "version": {
          "withMetadata": "b7d4ac37e7b8f3e9afa1d630b3ff02726b176f95639d4dee268e2f984cc3af47",
          "withoutMetadata": "b7d4ac37e7b8f3e9afa1d630b3ff02726b176f95639d4dee268e2f984cc3af47",
          "linkedWithoutMetadata": "b7d4ac37e7b8f3e9afa1d630b3ff02726b176f95639d4dee268e2f984cc3af47"
        },
        "inherit": [
          "contracts/diamond/Diamond.sol:Diamond"
        ],
        "libraries": [],
        "methods": [
          "(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Registry",
            "src": "contracts/registry/Registry.sol:6"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/AccessControlFacet.sol:AccessControlFacet": {
        "src": "contracts/registry/facets/AccessControlFacet.sol:10",
        "version": {
          "withMetadata": "7bfc2a363024858cc6b6f8eee8380009ce295d569aaf7d0ff419925fac7230c1",
          "withoutMetadata": "7bfc2a363024858cc6b6f8eee8380009ce295d569aaf7d0ff419925fac7230c1",
          "linkedWithoutMetadata": "7bfc2a363024858cc6b6f8eee8380009ce295d569aaf7d0ff419925fac7230c1"
        },
        "inherit": [
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/BaseRegistryFacet.sol:BaseRegistryFacet": {
        "src": "contracts/registry/facets/BaseRegistryFacet.sol:7",
        "version": {
          "withMetadata": "48ee31dd3ac19c0894f2680c577a517fde84fb92f56825b928441652c7e96a1b",
          "withoutMetadata": "48ee31dd3ac19c0894f2680c577a517fde84fb92f56825b928441652c7e96a1b",
          "linkedWithoutMetadata": "48ee31dd3ac19c0894f2680c577a517fde84fb92f56825b928441652c7e96a1b"
        },
        "inherit": [
          "contracts/registry/facets/Facet.sol:Facet",
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet",
          "contracts/registry/facets/interfaces/IBaseRegistryFacet.sol:IBaseRegistryFacet"
        ],
        "libraries": [],
        "methods": [
          "getTokenRecord(uint256)",
          "getGracePeriod()",
          "setDefaultWrapper(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/DomainRecordFacet.sol:DomainRecordFacet": {
        "src": "contracts/registry/facets/DomainRecordFacet.sol:12",
        "version": {
          "withMetadata": "e212f70884ae0be28d3c991343a9713e7483070117696093c3343793d2c324c8",
          "withoutMetadata": "e212f70884ae0be28d3c991343a9713e7483070117696093c3343793d2c324c8",
          "linkedWithoutMetadata": "e212f70884ae0be28d3c991343a9713e7483070117696093c3343793d2c324c8"
        },
        "inherit": [
          "contracts/registry/facets/Facet.sol:Facet",
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet",
          "contracts/registry/facets/interfaces/IDomainRecordFacet.sol:IDomainRecordFacet"
        ],
        "libraries": [],
        "methods": [
          "setRecord(bytes,bytes,address,address,uint64)",
          "setResolver(bytes32,bytes32,address)",
          "setOwner(bytes32,bytes32,address)",
          "setOperator(bytes32,bytes32,address,bool)",
          "setUser(bytes32,bytes32,address,uint64)",
          "setExpiry(bytes32,bytes32,uint64)",
          "bridge(bytes32,bytes32)",
          "getOwner(bytes32,bytes32)",
          "getResolver(bytes32,bytes32)",
          "getExpiry(bytes32,bytes32)",
          "getUser(bytes32,bytes32)",
          "getUserExpiry(bytes32,bytes32)",
          "isExists(bytes32,bytes32)",
          "isOperator(bytes32,bytes32,address)",
          "isLive(bytes32,bytes32)",
          "getTokenId(bytes,bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/Facet.sol:Facet": {
        "src": "contracts/registry/facets/Facet.sol:11",
        "inherit": [
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/HostRecordFacet.sol:HostRecordFacet": {
        "src": "contracts/registry/facets/HostRecordFacet.sol:12",
        "version": {
          "withMetadata": "ee80b94f592b5a2d53f792367bbc9222b4de834e08cd483b68a4937c0c9da3a1",
          "withoutMetadata": "ee80b94f592b5a2d53f792367bbc9222b4de834e08cd483b68a4937c0c9da3a1",
          "linkedWithoutMetadata": "ee80b94f592b5a2d53f792367bbc9222b4de834e08cd483b68a4937c0c9da3a1"
        },
        "inherit": [
          "contracts/registry/facets/Facet.sol:Facet",
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet",
          "contracts/registry/facets/interfaces/IHostRecordFacet.sol:IHostRecordFacet"
        ],
        "libraries": [],
        "methods": [
          "setRecord(bytes,bytes,bytes,uint16)",
          "setOperator(bytes32,bytes32,bytes32,address,bool)",
          "setUser(bytes32,bytes32,bytes32,address,uint64)",
          "unsetRecord(bytes32,bytes32,bytes32)",
          "getUser(bytes32,bytes32,bytes32)",
          "getUserExpiry(bytes32,bytes32,bytes32)",
          "getTtl(bytes32,bytes32,bytes32)",
          "isExists(bytes32,bytes32,bytes32)",
          "isOperator(bytes32,bytes32,bytes32,address)",
          "getTokenId(bytes,bytes,bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/TldRecordFacet.sol:TldRecordFacet": {
        "src": "contracts/registry/facets/TldRecordFacet.sol:9",
        "version": {
          "withMetadata": "ec67a3e7e343f1c54a5544e8b14e92609676a7a83364fee31744f1b357fc6036",
          "withoutMetadata": "ec67a3e7e343f1c54a5544e8b14e92609676a7a83364fee31744f1b357fc6036",
          "linkedWithoutMetadata": "ec67a3e7e343f1c54a5544e8b14e92609676a7a83364fee31744f1b357fc6036"
        },
        "inherit": [
          "contracts/registry/facets/Facet.sol:Facet",
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet",
          "contracts/registry/facets/interfaces/ITldRecordFacet.sol:ITldRecordFacet"
        ],
        "libraries": [],
        "methods": [
          "setRecord(enum Chain[],bytes,address,address,uint64,bool,uint8)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setEnable(bytes32,bool)",
          "setWrapper(bytes32,bool,address)",
          "setExpiry(bytes32,uint64)",
          "getOwner(bytes32)",
          "getResolver(bytes32)",
          "getExpiry(bytes32)",
          "getClass(bytes32)",
          "getChains(bytes32)",
          "getWrapper(bytes32)",
          "isExists(bytes32)",
          "isEnable(bytes32)",
          "getTokenId(bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/interfaces/IBaseRegistryFacet.sol:IBaseRegistryFacet": {
        "src": "contracts/registry/facets/interfaces/IBaseRegistryFacet.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenRecord(uint256)",
          "getGracePeriod()",
          "setDefaultWrapper(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/interfaces/IDomainRecordFacet.sol:IDomainRecordFacet": {
        "src": "contracts/registry/facets/interfaces/IDomainRecordFacet.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes,bytes,address,address,uint64)",
          "setResolver(bytes32,bytes32,address)",
          "setOwner(bytes32,bytes32,address)",
          "setOperator(bytes32,bytes32,address,bool)",
          "setUser(bytes32,bytes32,address,uint64)",
          "setExpiry(bytes32,bytes32,uint64)",
          "bridge(bytes32,bytes32)",
          "getOwner(bytes32,bytes32)",
          "getResolver(bytes32,bytes32)",
          "getExpiry(bytes32,bytes32)",
          "getUser(bytes32,bytes32)",
          "getUserExpiry(bytes32,bytes32)",
          "isExists(bytes32,bytes32)",
          "isOperator(bytes32,bytes32,address)",
          "isLive(bytes32,bytes32)",
          "getTokenId(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/interfaces/IHostRecordFacet.sol:IHostRecordFacet": {
        "src": "contracts/registry/facets/interfaces/IHostRecordFacet.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes,bytes,bytes,uint16)",
          "setOperator(bytes32,bytes32,bytes32,address,bool)",
          "setUser(bytes32,bytes32,bytes32,address,uint64)",
          "unsetRecord(bytes32,bytes32,bytes32)",
          "getUser(bytes32,bytes32,bytes32)",
          "getUserExpiry(bytes32,bytes32,bytes32)",
          "getTtl(bytes32,bytes32,bytes32)",
          "isExists(bytes32,bytes32,bytes32)",
          "isOperator(bytes32,bytes32,bytes32,address)",
          "getTokenId(bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/facets/interfaces/ITldRecordFacet.sol:ITldRecordFacet": {
        "src": "contracts/registry/facets/interfaces/ITldRecordFacet.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(enum Chain[],bytes,address,address,uint64,bool,uint8)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setEnable(bytes32,bool)",
          "setWrapper(bytes32,bool,address)",
          "setExpiry(bytes32,uint64)",
          "getOwner(bytes32)",
          "getResolver(bytes32)",
          "getExpiry(bytes32)",
          "getClass(bytes32)",
          "getChains(bytes32)",
          "getWrapper(bytes32)",
          "isExists(bytes32)",
          "isEnable(bytes32)",
          "getTokenId(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/initilaizer/RegistryInit.sol:RegistryInit": {
        "src": "contracts/registry/initilaizer/RegistryInit.sol:12",
        "version": {
          "withMetadata": "7ef797777affb68fb8a53a72a3c52d6e0808e236f203762ce701637624c73d00",
          "withoutMetadata": "7ef797777affb68fb8a53a72a3c52d6e0808e236f203762ce701637624c73d00",
          "linkedWithoutMetadata": "7ef797777affb68fb8a53a72a3c52d6e0808e236f203762ce701637624c73d00"
        },
        "inherit": [
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "contracts/diamond/upgradeInitializers/DiamondInit.sol:DiamondInit"
        ],
        "libraries": [],
        "methods": [
          "init()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/interfaces/IRegistry.sol:IRegistry": {
        "src": "contracts/registry/interfaces/IRegistry.sol:11",
        "inherit": [
          "contracts/registry/facets/Facet.sol:Facet",
          "contracts/diamond/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/diamond/storage/facets/AccessControlStorageFacet.sol:AccessControlStorageFacet",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet",
          "contracts/registry/facets/interfaces/IBaseRegistryFacet.sol:IBaseRegistryFacet",
          "contracts/registry/facets/interfaces/IHostRecordFacet.sol:IHostRecordFacet",
          "contracts/registry/facets/interfaces/IDomainRecordFacet.sol:IDomainRecordFacet",
          "contracts/registry/facets/interfaces/ITldRecordFacet.sol:ITldRecordFacet"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/storage/facets/AppStorageFacet.sol:AppStorageFacet": {
        "src": "contracts/registry/storage/facets/AppStorageFacet.sol:7",
        "version": {
          "withMetadata": "aaec441455cf5d09d059551df90879c99ebd81b0f64382778c5c0763b7687c7f",
          "withoutMetadata": "aaec441455cf5d09d059551df90879c99ebd81b0f64382778c5c0763b7687c7f",
          "linkedWithoutMetadata": "aaec441455cf5d09d059551df90879c99ebd81b0f64382778c5c0763b7687c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "s",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AppStorage)19843_storage",
              "contract": "AppStorageFacet",
              "src": "contracts/registry/storage/facets/AppStorageFacet.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_struct(AppStorage)19843_storage": {
              "label": "struct AppStorage",
              "members": [
                {
                  "label": "AT",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "GRACE_PERIOD",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ADMIN_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "OPERATOR_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "REGISTRAR_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "ROOT_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "WRAPPER_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "BRIDGE_ROLE",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "defaultWrapper",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/registry/storage/facets/RegistryStorageFacet.sol:RegistryStorageFacet": {
        "src": "contracts/registry/storage/facets/RegistryStorageFacet.sol:6",
        "version": {
          "withMetadata": "7c25bf6cc80f82c363bfe73a295024ba7122b6c48e55611fdc7ee294da63bd6a",
          "withoutMetadata": "7c25bf6cc80f82c363bfe73a295024ba7122b6c48e55611fdc7ee294da63bd6a",
          "linkedWithoutMetadata": "7c25bf6cc80f82c363bfe73a295024ba7122b6c48e55611fdc7ee294da63bd6a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/rental/Rental.sol:Rental": {
        "src": "contracts/rental/Rental.sol:12",
        "version": {
          "withMetadata": "2b94bddec94336beb9524458d915ae080cf0e488c3ae02315542cbc37edce871",
          "withoutMetadata": "2b94bddec94336beb9524458d915ae080cf0e488c3ae02315542cbc37edce871",
          "linkedWithoutMetadata": "2b94bddec94336beb9524458d915ae080cf0e488c3ae02315542cbc37edce871"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/rental/interface/IRental.sol:IRental"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "list(address,uint256,uint64,uint256)",
          "unlist(address,uint256)",
          "rent(address,uint256,address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_RENTAL_PERIOD",
            "src": "contracts/rental/Rental.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "301",
              "type": "t_contract(IERC20)6615",
              "contract": "Rental",
              "src": "contracts/rental/Rental.sol:13"
            },
            {
              "label": "MINIMUM_RENTAL_PERIOD",
              "offset": 0,
              "slot": "302",
              "type": "t_uint256",
              "contract": "Rental",
              "src": "contracts/rental/Rental.sol:15"
            },
            {
              "label": "_orders",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_uint256,t_struct(Order)20262_storage)",
              "contract": "Rental",
              "src": "contracts/rental/Rental.sol:19"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Rental",
              "src": "contracts/rental/Rental.sol:85"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)6615": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Order)20262_storage)": {
              "label": "mapping(uint256 => struct IRental.Order)",
              "numberOfBytes": "32"
            },
            "t_struct(Order)20262_storage": {
              "label": "struct IRental.Order",
              "members": [
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "expiry",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/rental/interface/IRental.sol:IRental": {
        "src": "contracts/rental/interface/IRental.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "list(address,uint256,uint64,uint256)",
          "unlist(address,uint256)",
          "rent(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/BaseResolver.sol:BaseResolver": {
        "src": "contracts/resolver/BaseResolver.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver"
        ],
        "libraries": [],
        "methods": [
          "setSynchronizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/PublicResolver.sol:PublicResolver": {
        "src": "contracts/resolver/PublicResolver.sol:14",
        "version": {
          "withMetadata": "aaab8a782464317242bbc6c394b8ad0e2c98e537eaa7f11cec0ea79217e57da9",
          "withoutMetadata": "aaab8a782464317242bbc6c394b8ad0e2c98e537eaa7f11cec0ea79217e57da9",
          "linkedWithoutMetadata": "aaab8a782464317242bbc6c394b8ad0e2c98e537eaa7f11cec0ea79217e57da9"
        },
        "inherit": [
          "contracts/resolver/profile/TypedTextResolver.sol:TypedTextResolver",
          "contracts/resolver/profile/TextResolver.sol:TextResolver",
          "contracts/resolver/profile/NFTResolver.sol:NFTResolver",
          "contracts/resolver/profile/MultiCoinAddressResolver.sol:MultiCoinAddressResolver",
          "contracts/resolver/profile/AddressResolver.sol:AddressResolver",
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/interfaces/IPublicResolver.sol:IPublicResolver",
          "contracts/resolver/profile/interfaces/ITypedTextResolver.sol:ITypedTextResolver",
          "contracts/resolver/profile/interfaces/ITextResolver.sol:ITextResolver",
          "contracts/resolver/profile/interfaces/INFTResolver.sol:INFTResolver",
          "contracts/resolver/profile/interfaces/IMultiCoinAddressResolver.sol:IMultiCoinAddressResolver",
          "contracts/resolver/profile/interfaces/IAddressResolver.sol:IAddressResolver"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_addresses",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_address))",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:8"
            },
            {
              "label": "_reverseAddresses",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_address,t_bytes_storage)",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:77"
            },
            {
              "label": "_multiCoinAddresses",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "MultiCoinAddressResolver",
              "src": "contracts/resolver/profile/MultiCoinAddressResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MultiCoinAddressResolver",
              "src": "contracts/resolver/profile/MultiCoinAddressResolver.sol:52"
            },
            {
              "label": "_nfts",
              "offset": 0,
              "slot": "406",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage)))",
              "contract": "NFTResolver",
              "src": "contracts/resolver/profile/NFTResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "407",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NFTResolver",
              "src": "contracts/resolver/profile/NFTResolver.sol:48"
            },
            {
              "label": "_texts",
              "offset": 0,
              "slot": "457",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_string_storage))",
              "contract": "TextResolver",
              "src": "contracts/resolver/profile/TextResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "458",
              "type": "t_array(t_uint256)50_storage",
              "contract": "TextResolver",
              "src": "contracts/resolver/profile/TextResolver.sol:41"
            },
            {
              "label": "_typedTexts",
              "offset": 0,
              "slot": "508",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage)))",
              "contract": "TypedTextResolver",
              "src": "contracts/resolver/profile/TypedTextResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "509",
              "type": "t_array(t_uint256)50_storage",
              "contract": "TypedTextResolver",
              "src": "contracts/resolver/profile/TypedTextResolver.sol:41"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "559",
              "type": "t_array(t_uint256)50_storage",
              "contract": "PublicResolver",
              "src": "contracts/resolver/PublicResolver.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes_storage)": {
              "label": "mapping(address => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_address))": {
              "label": "mapping(address => mapping(bytes32 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(bytes32 => string)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(uint256 => struct INFTResolver.NFT)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(address => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => struct INFTResolver.NFT))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFT)22551_storage)": {
              "label": "mapping(uint256 => struct INFTResolver.NFT)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(NFT)22551_storage": {
              "label": "struct INFTResolver.NFT",
              "members": [
                {
                  "label": "contract_",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver": {
        "src": "contracts/resolver/interfaces/IBaseResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/interfaces/IPublicResolver.sol:IPublicResolver": {
        "src": "contracts/resolver/interfaces/IPublicResolver.sol:10",
        "inherit": [
          "contracts/resolver/profile/interfaces/ITypedTextResolver.sol:ITypedTextResolver",
          "contracts/resolver/profile/interfaces/ITextResolver.sol:ITextResolver",
          "contracts/resolver/profile/interfaces/INFTResolver.sol:INFTResolver",
          "contracts/resolver/profile/interfaces/IMultiCoinAddressResolver.sol:IMultiCoinAddressResolver",
          "contracts/resolver/profile/interfaces/IAddressResolver.sol:IAddressResolver"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/AddressResolver.sol:AddressResolver": {
        "src": "contracts/resolver/profile/AddressResolver.sol:7",
        "inherit": [
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/profile/interfaces/IAddressResolver.sol:IAddressResolver"
        ],
        "libraries": [],
        "methods": [
          "setAddress(bytes,bytes,bytes,address)",
          "unsetAddress(bytes,bytes,bytes)",
          "getAddress(bytes,bytes,bytes)",
          "setReverseAddress(bytes,bytes,bytes,address)",
          "unsetReverseAddress(bytes,bytes,bytes,address)",
          "getReverseAddress(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_addresses",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_address))",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:8"
            },
            {
              "label": "_reverseAddresses",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_address,t_bytes_storage)",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "AddressResolver",
              "src": "contracts/resolver/profile/AddressResolver.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes_storage)": {
              "label": "mapping(address => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_address))": {
              "label": "mapping(address => mapping(bytes32 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/MultiCoinAddressResolver.sol:MultiCoinAddressResolver": {
        "src": "contracts/resolver/profile/MultiCoinAddressResolver.sol:7",
        "inherit": [
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/profile/interfaces/IMultiCoinAddressResolver.sol:IMultiCoinAddressResolver"
        ],
        "libraries": [],
        "methods": [
          "setMultiCoinAddress(bytes,bytes,bytes,uint256,bytes)",
          "unsetMultiCoinAddress(bytes,bytes,bytes,uint256)",
          "getMultiCoinAddress(bytes,bytes,bytes,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_multiCoinAddresses",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "MultiCoinAddressResolver",
              "src": "contracts/resolver/profile/MultiCoinAddressResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "MultiCoinAddressResolver",
              "src": "contracts/resolver/profile/MultiCoinAddressResolver.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/NFTResolver.sol:NFTResolver": {
        "src": "contracts/resolver/profile/NFTResolver.sol:7",
        "inherit": [
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/profile/interfaces/INFTResolver.sol:INFTResolver"
        ],
        "libraries": [],
        "methods": [
          "setNFT(bytes,bytes,bytes,uint256,address,uint256)",
          "unsetNFT(bytes,bytes,bytes,uint256)",
          "getNFT(bytes,bytes,bytes,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_nfts",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage)))",
              "contract": "NFTResolver",
              "src": "contracts/resolver/profile/NFTResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "NFTResolver",
              "src": "contracts/resolver/profile/NFTResolver.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(uint256 => struct INFTResolver.NFT)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)22551_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => struct INFTResolver.NFT))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NFT)22551_storage)": {
              "label": "mapping(uint256 => struct INFTResolver.NFT)",
              "numberOfBytes": "32"
            },
            "t_struct(NFT)22551_storage": {
              "label": "struct INFTResolver.NFT",
              "members": [
                {
                  "label": "contract_",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/TextResolver.sol:TextResolver": {
        "src": "contracts/resolver/profile/TextResolver.sol:7",
        "inherit": [
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/profile/interfaces/ITextResolver.sol:ITextResolver"
        ],
        "libraries": [],
        "methods": [
          "setText(bytes,bytes,bytes,string)",
          "unsetText(bytes,bytes,bytes)",
          "getText(bytes,bytes,bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_texts",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_string_storage))",
              "contract": "TextResolver",
              "src": "contracts/resolver/profile/TextResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "TextResolver",
              "src": "contracts/resolver/profile/TextResolver.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(address => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/TypedTextResolver.sol:TypedTextResolver": {
        "src": "contracts/resolver/profile/TypedTextResolver.sol:7",
        "inherit": [
          "contracts/resolver/BaseResolver.sol:BaseResolver",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "contracts/crosschain/SynchronizerApplication.sol:SynchronizerApplication",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/crosschain/interfaces/ISynchronizerApplication.sol:ISynchronizerApplication",
          "contracts/utils/Helper.sol:Helper",
          "contracts/resolver/interfaces/IBaseResolver.sol:IBaseResolver",
          "contracts/resolver/profile/interfaces/ITypedTextResolver.sol:ITypedTextResolver"
        ],
        "libraries": [],
        "methods": [
          "setTypedText(bytes,bytes,bytes,bytes,string)",
          "unsetTypedText(bytes,bytes,bytes,bytes)",
          "getTypedText(bytes,bytes,bytes,bytes)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_synchronizer",
              "offset": 0,
              "slot": "51",
              "type": "t_contract(ISynchronizer)10258",
              "contract": "SynchronizerApplication",
              "src": "contracts/crosschain/SynchronizerApplication.sol:9"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistry)19787",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "253",
              "type": "t_array(t_uint256)50_storage",
              "contract": "BaseResolver",
              "src": "contracts/resolver/BaseResolver.sol:95"
            },
            {
              "label": "_typedTexts",
              "offset": 0,
              "slot": "303",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage)))",
              "contract": "TypedTextResolver",
              "src": "contracts/resolver/profile/TypedTextResolver.sol:8"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "304",
              "type": "t_array(t_uint256)50_storage",
              "contract": "TypedTextResolver",
              "src": "contracts/resolver/profile/TypedTextResolver.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISynchronizer)10258": {
              "label": "contract ISynchronizer",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage)))": {
              "label": "mapping(address => mapping(bytes32 => mapping(bytes32 => string)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts/resolver/profile/interfaces/IAddressResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setAddress(bytes,bytes,bytes,address)",
          "unsetAddress(bytes,bytes,bytes)",
          "getAddress(bytes,bytes,bytes)",
          "setReverseAddress(bytes,bytes,bytes,address)",
          "unsetReverseAddress(bytes,bytes,bytes,address)",
          "getReverseAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts/resolver/profile/interfaces/IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setContentHash(string,string,string,bytes)",
          "getContentHash(bytes,bytes,bytes)",
          "setTypedContentHash(string,string,string,uint8,bytes)",
          "getTypedContentHash(bytes,bytes,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/IMultiCoinAddressResolver.sol:IMultiCoinAddressResolver": {
        "src": "contracts/resolver/profile/interfaces/IMultiCoinAddressResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setMultiCoinAddress(bytes,bytes,bytes,uint256,bytes)",
          "unsetMultiCoinAddress(bytes,bytes,bytes,uint256)",
          "getMultiCoinAddress(bytes,bytes,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/INFTResolver.sol:INFTResolver": {
        "src": "contracts/resolver/profile/interfaces/INFTResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNFT(bytes,bytes,bytes,uint256,address,uint256)",
          "unsetNFT(bytes,bytes,bytes,uint256)",
          "getNFT(bytes,bytes,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/ITextResolver.sol:ITextResolver": {
        "src": "contracts/resolver/profile/interfaces/ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setText(bytes,bytes,bytes,string)",
          "unsetText(bytes,bytes,bytes)",
          "getText(bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/resolver/profile/interfaces/ITypedTextResolver.sol:ITypedTextResolver": {
        "src": "contracts/resolver/profile/interfaces/ITypedTextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTypedText(bytes,bytes,bytes,bytes,string)",
          "unsetTypedText(bytes,bytes,bytes,bytes)",
          "getTypedText(bytes,bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/root/Root.sol:Root": {
        "src": "contracts/root/Root.sol:14",
        "version": {
          "withMetadata": "5d2a187622405d0ba8f0ea8e2029d8053f34a03a1a0fbbd0e973298bbbf9f5ce",
          "withoutMetadata": "5d2a187622405d0ba8f0ea8e2029d8053f34a03a1a0fbbd0e973298bbbf9f5ce",
          "linkedWithoutMetadata": "5d2a187622405d0ba8f0ea8e2029d8053f34a03a1a0fbbd0e973298bbbf9f5ce"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/root/interfaces/IRoot.sol:IRoot"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "register(enum Chain[],bytes,address,uint64,address,bool,uint8)",
          "renew(bytes,uint64)",
          "transfer(bytes,address)",
          "setEnable(bytes,bool)",
          "setResolver(bytes,address)",
          "setControllerApproval(bytes32,address,bool)",
          "setWrapper(bytes32,bool,address)",
          "isEnable(bytes)",
          "getResolver(bytes)",
          "getAuthorizer()",
          "setAuthorizer(address)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "251",
              "type": "t_contract(IRegistry)19787",
              "contract": "Root",
              "src": "contracts/root/Root.sol:15"
            },
            {
              "label": "_registrar",
              "offset": 0,
              "slot": "252",
              "type": "t_contract(IRegistrar)16090",
              "contract": "Root",
              "src": "contracts/root/Root.sol:16"
            },
            {
              "label": "_authorizer",
              "offset": 0,
              "slot": "253",
              "type": "t_address",
              "contract": "Root",
              "src": "contracts/root/Root.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Root",
              "src": "contracts/root/Root.sol:117"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistrar)16090": {
              "label": "contract IRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/root/interfaces/IRoot.sol:IRoot": {
        "src": "contracts/root/interfaces/IRoot.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "register(enum Chain[],bytes,address,uint64,address,bool,uint8)",
          "renew(bytes,uint64)",
          "transfer(bytes,address)",
          "setEnable(bytes,bool)",
          "setResolver(bytes,address)",
          "setControllerApproval(bytes32,address,bool)",
          "setWrapper(bytes32,bool,address)",
          "isEnable(bytes)",
          "getResolver(bytes)",
          "getAuthorizer()",
          "setAuthorizer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/Helper.sol:Helper": {
        "src": "contracts/utils/Helper.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "valid(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/wrapper/Wrapper.sol:Wrapper": {
        "src": "contracts/wrapper/Wrapper.sol:15",
        "version": {
          "withMetadata": "83bd1b554915db65a94b974ccd6b33854f088b80ab3d276ef8daa821d5a8c033",
          "withoutMetadata": "83bd1b554915db65a94b974ccd6b33854f088b80ab3d276ef8daa821d5a8c033",
          "linkedWithoutMetadata": "83bd1b554915db65a94b974ccd6b33854f088b80ab3d276ef8daa821d5a8c033"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:IERC2981Upgradeable",
          "contracts/wrapper/interfaces/IWrapper.sol:IWrapper",
          "contracts/wrapper/interfaces/IERC4907.sol:IERC4907",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,string,string)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "mint(address,uint256)",
          "burn(uint256)",
          "name()",
          "setName(string)",
          "symbol()",
          "setSymbol(string)",
          "tokenURI(uint256)",
          "setBaseURI(string)",
          "setUser(uint256,address,uint64)",
          "userOf(uint256)",
          "userExpiry(uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "101",
              "type": "t_struct(RoyaltyInfo)2120_storage",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2120_storage)",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)48_storage",
              "contract": "ERC2981Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:119"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "301",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "351",
              "type": "t_contract(IRegistry)19787",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:16"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "352",
              "type": "t_string_storage",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:22"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "353",
              "type": "t_string_storage",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:23"
            },
            {
              "label": "__baseURI",
              "offset": 0,
              "slot": "354",
              "type": "t_bytes_storage",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:24"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:26"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "356",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:27"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "357",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:28"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "358",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Wrapper",
              "src": "contracts/wrapper/Wrapper.sol:348"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)19787": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2120_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)2120_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/wrapper/interfaces/IERC4907.sol:IERC4907": {
        "src": "contracts/wrapper/interfaces/IERC4907.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setUser(uint256,address,uint64)",
          "userOf(uint256)",
          "userExpiry(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/wrapper/interfaces/IWrapper.sol:IWrapper": {
        "src": "contracts/wrapper/interfaces/IWrapper.sol:8",
        "inherit": [
          "contracts/wrapper/interfaces/IERC4907.sol:IERC4907",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(uint256)",
          "setName(string)",
          "setSymbol(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    }
  ]
}