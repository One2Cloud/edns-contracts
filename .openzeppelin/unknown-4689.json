{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x7c5DbFE487D01BC0C75704dBfD334198E6AB2D12",
    "txHash": "0x95761740cff7319da885c321aba7c3854f314ee2a5e67e17c616b220a03ecac4"
  },
  "proxies": [
    {
      "address": "0x6CfcCD07f5461755E1a02E00CDaEEdf2bC2A5Eed",
      "txHash": "0xd9e93ad52454894dcd96d6499bd2ed27c9d55a971c3d01adbcecae1f824153b0",
      "kind": "transparent"
    },
    {
      "address": "0xA70206dC65a63a9A5DdF8F8e5e2B83Ccd6709dFA",
      "txHash": "0x808c41f3b1111506a8f7f7cb9f38e031d1f9443960a23daeebb6fccaa293cfac",
      "kind": "transparent"
    },
    {
      "address": "0x2A84bF602cD8CF7637d8F247Dd5Dd0ed10525EBA",
      "txHash": "0x1d50f23031c516733a535c7b803e95f3261978a56423ec194c5454e54aa2a343",
      "kind": "transparent"
    },
    {
      "address": "0xFE15B81Ee783CB592f3DbE4CDF66ECfa12A8847B",
      "txHash": "0x0bd0ba33d3b12a9ba90139f3468ebf10d931d4a6cb9a22aad1c94fed75c95628",
      "kind": "transparent"
    },
    {
      "address": "0xaE2e725957f7EA2a5A5D7f73301ed5c3B23B06AA",
      "txHash": "0xc89cb445cb8a5837ac3875af5e96c0219cd1446ae7c915b228e47b4cc6cc5be7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cddec96c79b94506eeaa6a34de45b810a8ee3a545414937165805143ac3b7c4f": {
      "address": "0x4DBF8e91a085523226e338141fDaCaa03E5Fe7c7",
      "txHash": "0x50ae2f18b94079c8311965cedd9526ab8baf7dcbc72e2eaf099473b807e1eb90",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "records",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(Record)11320_storage)",
            "contract": "EDNSRegistry",
            "src": "contracts/registry/EDNSRegistry.sol:15"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "EDNSRegistry",
            "src": "contracts/registry/EDNSRegistry.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Record)11320_storage)": {
            "label": "mapping(bytes32 => struct EDNSRegistry.Record)",
            "numberOfBytes": "32"
          },
          "t_struct(Record)11320_storage": {
            "label": "struct EDNSRegistry.Record",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "resolver",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ttl",
                "type": "t_uint64",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        }
      }
    },
    "d6a084b5fbea6d88503b4827c781df16aaa27d3014251f828e9a4099d8e7f272": {
      "address": "0x3c2DAab0AF88B0c5505ccB585e04FB33d7C80144",
      "txHash": "0xcad5acf73736e4b28a41752dfd40d2dd5eb5200d525cf5600cc125a4ceeeabc8",
      "layout": {
        "storage": [
          {
            "label": "nfts",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)13984_storage))",
            "contract": "NFTResolver",
            "src": "contracts/resolvers/profiles/NFTResolver.sol:7"
          },
          {
            "label": "abis",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))",
            "contract": "ABIResolver",
            "src": "contracts/resolvers/profiles/ABIResolver.sol:8"
          },
          {
            "label": "_addresses",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))",
            "contract": "AddrResolver",
            "src": "contracts/resolvers/profiles/AddrResolver.sol:11"
          },
          {
            "label": "hashes",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ContentHashResolver",
            "src": "contracts/resolvers/profiles/ContentHashResolver.sol:8"
          },
          {
            "label": "zonehashes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "DNSResolver",
            "src": "contracts/resolvers/profiles/DNSResolver.sol:17"
          },
          {
            "label": "versions",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "DNSResolver",
            "src": "contracts/resolvers/profiles/DNSResolver.sol:23"
          },
          {
            "label": "records",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_uint16,t_bytes_storage))))",
            "contract": "DNSResolver",
            "src": "contracts/resolvers/profiles/DNSResolver.sol:27"
          },
          {
            "label": "nameEntriesCount",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_bytes32,t_uint16)))",
            "contract": "DNSResolver",
            "src": "contracts/resolvers/profiles/DNSResolver.sol:32"
          },
          {
            "label": "interfaces",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))",
            "contract": "InterfaceResolver",
            "src": "contracts/resolvers/profiles/InterfaceResolver.sol:10"
          },
          {
            "label": "names",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "NameResolver",
            "src": "contracts/resolvers/profiles/NameResolver.sol:8"
          },
          {
            "label": "pubkeys",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_bytes32,t_struct(PublicKey)14423_storage)",
            "contract": "PubkeyResolver",
            "src": "contracts/resolvers/profiles/PubkeyResolver.sol:13"
          },
          {
            "label": "texts",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))",
            "contract": "TextResolver",
            "src": "contracts/resolvers/profiles/TextResolver.sol:8"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "12",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "12",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "edns",
            "offset": 2,
            "slot": "12",
            "type": "t_contract(EDNS)11304",
            "contract": "PublicResolver",
            "src": "contracts/resolvers/PublicResolver.sol:37"
          },
          {
            "label": "nameWrapper",
            "offset": 0,
            "slot": "13",
            "type": "t_contract(INameWrapper)12504",
            "contract": "PublicResolver",
            "src": "contracts/resolvers/PublicResolver.sol:38"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "PublicResolver",
            "src": "contracts/resolvers/PublicResolver.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(EDNS)11304": {
            "label": "contract EDNS",
            "numberOfBytes": "20"
          },
          "t_contract(INameWrapper)12504": {
            "label": "contract INameWrapper",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
            "label": "mapping(bytes32 => mapping(bytes4 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
            "label": "mapping(bytes32 => mapping(string => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint16,t_bytes_storage))": {
            "label": "mapping(bytes32 => mapping(uint16 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_uint16,t_bytes_storage))))": {
            "label": "mapping(bytes32 => mapping(uint256 => mapping(bytes32 => mapping(uint16 => bytes))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_bytes32,t_uint16)))": {
            "label": "mapping(bytes32 => mapping(uint256 => mapping(bytes32 => uint16)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(NFT)13984_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => struct INFTResolver.NFT))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PublicKey)14423_storage)": {
            "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint16)": {
            "label": "mapping(bytes32 => uint16)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_mapping(t_uint16,t_bytes_storage)))": {
            "label": "mapping(uint256 => mapping(bytes32 => mapping(uint16 => bytes)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint16))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint16))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFT)13984_storage)": {
            "label": "mapping(uint256 => struct INFTResolver.NFT)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(NFT)13984_storage": {
            "label": "struct INFTResolver.NFT",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PublicKey)14423_storage": {
            "label": "struct PubkeyResolver.PublicKey",
            "members": [
              {
                "label": "x",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "y",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "eea71109ba0c38ff45d76ba4ec48b19778cef716a09e5a7f0acb1410719f7019": {
      "address": "0x53a0018f919bde9C254bda697966C5f448ffDDcB",
      "txHash": "0xd59153ed2441a6ab5bb143fa469d82039f6dbd0c353bbdadcfa4d2249a2e7cc6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "edns",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(EDNS)11304",
            "contract": "BaseRegistrar",
            "src": "contracts/registrar/BaseRegistrar.sol:17"
          },
          {
            "label": "baseNodes",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "BaseRegistrar",
            "src": "contracts/registrar/BaseRegistrar.sol:20"
          },
          {
            "label": "controllers",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BaseRegistrar",
            "src": "contracts/registrar/BaseRegistrar.sol:23"
          },
          {
            "label": "expiries",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BaseRegistrarImplementation",
            "src": "contracts/registrar/BaseRegistrarImplementation.sol:13"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "BaseRegistrarImplementation",
            "src": "contracts/registrar/BaseRegistrarImplementation.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(EDNS)11304": {
            "label": "contract EDNS",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "96bd445d4db38c0ab6c3af102b057c15f3fa6be53614220edfcdafec97188128": {
      "address": "0x8C856f71d71e8CF4AD9A44cDC426b09e315c6A6a",
      "txHash": "0x97c60148ceef7b7b7819ce8bedef2dcb6a08b79d76f36ccdcd0b5d6f1a0ccf54",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3160_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "tlds",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes_memory_ptr,t_bytes32)",
            "contract": "EDNSRegistrarController",
            "src": "contracts/registrar/EDNSRegistrarController.sol:21"
          },
          {
            "label": "_operators",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "EDNSRegistrarController",
            "src": "contracts/registrar/EDNSRegistrarController.sol:23"
          },
          {
            "label": "base",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(BaseRegistrarImplementation)10482",
            "contract": "EDNSRegistrarController",
            "src": "contracts/registrar/EDNSRegistrarController.sol:25"
          },
          {
            "label": "nameMinimumLengthLimit",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "EDNSRegistrarController",
            "src": "contracts/registrar/EDNSRegistrarController.sol:27"
          },
          {
            "label": "nameMaximumLengthLimit",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "EDNSRegistrarController",
            "src": "contracts/registrar/EDNSRegistrarController.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(BaseRegistrarImplementation)10482": {
            "label": "contract BaseRegistrarImplementation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3160_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bytes32)": {
            "label": "mapping(bytes => bytes32)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3160_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2859_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2859_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes"
          }
        }
      }
    },
    "2397a19b5ae002841a985049e95ce32929506dac4a4860bcd4b5d029f93469b3": {
      "address": "0xD986F9083F006D0E2d08c9F22247b4a0a213146D",
      "txHash": "0x160714f749a1fcd5872bf34a9cf43b6c9f931f3b911c1ed1d0555726c61fd7bd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "controllers",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Controllable",
            "src": "contracts/root/Controllable.sol:6"
          },
          {
            "label": "edns",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(EDNS)11304",
            "contract": "ReverseRegistrar",
            "src": "contracts/registry/ReverseRegistrar.sol:18"
          },
          {
            "label": "defaultResolver",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(NameResolver)11764",
            "contract": "ReverseRegistrar",
            "src": "contracts/registry/ReverseRegistrar.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(EDNS)11304": {
            "label": "contract EDNS",
            "numberOfBytes": "20"
          },
          "t_contract(NameResolver)11764": {
            "label": "contract NameResolver",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
